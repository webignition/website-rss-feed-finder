HTTP/1.1 200 OK
Server: Apache
Content-Type: text/html; charset=utf-8
Content-Length: 124691
Date: Tue, 18 Sep 2012 14:00:48 GMT

<!DOCTYPE html>
 
<head> 
<meta charset=utf-8>
<title>Coding Horror</title> 
<link rel="stylesheet" href="http://www.codinghorror.com/blog/styles-site.css" type="text/css" /> 
<link rel="stylesheet" href="http://www.codinghorror.com/blog/styles-site-mobile.css" type="text/css" media="handheld" /> 
<link rel="stylesheet" href="http://www.codinghorror.com/blog/styles-site-print.css" type="text/css" media="print" /> 
<link rel="alternate" type="application/rss+xml" title="RSS" href="http://feeds.feedburner.com/codinghorror/" /> 
<link rel="shortcut icon" href="/favicon.ico" />
<link rel="openid.server" href="http://www.myopenid.com/server"> 
<link rel="openid.delegate" href="http://codinghorror.myopenid.com/"> 
<meta name="google-site-verification" content="sl0m9SU_4V0JcvjWlOX4dUFBR6VS2P4tlxjJMo0gphU" />
<meta name="readability-verification" content="kvJUbAcM2bZHfK2GbTd3fVHyuhGexVPuQet7wCF2"/>
<link rel="apple-touch-icon" href="http://www.codinghorror.com/.a/6a0120a85dcdae970b017615c1941f970c-pi">
</head> 
 
<div id="header"> 

<div style="float:left; "> 
<a href="http://www.codinghorror.com/blog/"><img src="http://www.codinghorror.com/blog/images/coding-horror-official-logo-small.png" alt="I &lt;3 Steve McConnell" height="91" width="100"></a>
</div> 
<div style="float:left; margin-top:10px;"> 
<a href="http://www.codinghorror.com/blog/"><img alt="Coding Horror" src="http://www.codinghorror.com/blog/images/coding-horror-text.png" height="25" width="275"></a><br/> 
<span class="description">programming and human factors<br/>by Jeff Atwood</span> 
</div> 

<div style="float:right; margin-top:20px;" id="searchbox"> 
<form action="http://www.google.com" id="cse-search-box">
  <div>
    <input type="hidden" name="cx" value="partner-pub-6424649804324178:5453723522" />
    <input type="hidden" name="ie" value="UTF-8" />
    <input type="text" name="q" size="55" />
    <input type="submit" name="sa" value="Search" />
  </div>
</form>

<script type="text/javascript" src="http://www.google.com/coop/cse/brand?form=cse-search-box&amp;lang=en"></script>

</div> 

</div> <!-- header --> 
 
<div id="content"> 
<div class="blog"> 


 
<div class="blogbody"> 
	
	<div id="computer_crime_then_and_now"></div> 
	<h2 class="title"><a href="http://www.codinghorror.com/blog/2012/09/computer-crime-then-and-now.html" class="title-link">Computer Crime, Then and Now</a></h2> 

  
	<h3 class="date">September 12, 2012</h3> 
	

<p>
I've already <a href="http://www.codinghorror.com/blog/2012/08/i-was-a-teenage-hacker.html">documented</a> my brief, youthful dalliance with the illegal side of computing as it existed in the late 1980s. But was it <i>crime?</i> Was I truly a <i>criminal?</i> I don't think so. To be perfectly blunt, I wasn't talented enough to be any kind of threat. I'm still not.
</p>
<p>
There are two classic books describing hackers active in the 1980s who <i>did</i> have incredible talent. Talents that made them dangerous enough to be considered criminal threats.
</p>
<p>
<table>
<tr>
<td valign="top">
<a href="http://www.amazon.com/dp/1416507787/?tag=codihorr-20"><img alt="The Cuckoo's Egg: Tracking a Spy Through the Maze of Computer Espionage" title="The Cuckoo's Egg: Tracking a Spy Through the Maze of Computer Espionage" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b017c31ce3e31970b-800wi" /></a>
<br/>
<a href="http://www.amazon.com/dp/1416507787/?tag=codihorr-20">The Cuckoo's Egg: Tracking a Spy Through the Maze of Computer Espionage</a>
</td>
<td valign="top">
<a href="http://www.amazon.com/dp/0316037702/?tag=codihorr-20"><img alt="Ghost in the Wires: My Adventures as the World's Most Wanted Hacker" title="Ghost in the Wires: My Adventures as the World's Most Wanted Hacker" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b01761755453d970c-800wi" width="300" height="465" /></a><br/>
<a href="http://www.amazon.com/dp/0316037702/?tag=codihorr-20">Ghost in the Wires: My Adventures as the World's Most Wanted Hacker</a>
</td>
</table>
</p>
<p>
Cuckoo is arguably the first case of hacking that was a clearly malicious crime circa 1986, and certainly the first known case of computer hacking as international espionage. I read this when it was originally published in 1989, and it's still a gripping investigative story. Cliff Stoll is a visionary writer who saw <b>how trust in computers and the emerging Internet could be vulnerable to real, actual, honest-to-God <i>criminals</i>.</b> 
</p>
<p>
I'm not sure <a href="http://en.wikipedia.org/wiki/Kevin_Mitnick">Kevin Mitnick</a> did anything all that illegal, but there's no denying that he was the world's first high profile computer criminal.
</p>
<p>
<a href="http://en.wikipedia.org/wiki/Kevin_Mitnick"><img alt="Kevin Mitnick FBI wanted poster" title="Kevin Mitnick FBI wanted poster" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b017744ac82bb970d-800wi" /></a>
</p>
<p>
By 1994 he made the FBI's 10 Most Wanted list, and there were <a href="http://www.nytimes.com/1994/07/04/us/cyberspace-s-most-wanted-hacker-eludes-fbi-pursuit.html?pagewanted=all&src=pm">front page New York Times articles about his pursuit</a>. If there was ever a moment that computer crime and "hacking" entered the public consciousness as an ongoing concern, this was it.
</p>
<p>The whole story is told in minute detail by Kevin himself in <a href="http://www.amazon.com/dp/0316037702/?tag=codihorr-20">Ghost in the Wires</a>. There was a sanitized version of Kevin's story presented in <a href="http://www.codinghorror.com/blog/2008/12/our-hacker-odyssey.html">Wizzywig comix</a> but this is the original directly from the source, and it's well worth reading. I could barely put it down. Kevin has been fully reformed for many years now; he wrote <a href="http://www.amazon.com/s/ref=ntt_athr_dp_sr_1?_encoding=UTF8&field-author=Kevin%20Mitnick&ie=UTF8&search-alias=books&sort=relevancerank">several books</a> documenting his techniques and now <a href="http://mitnicksecurity.com/">consults</a> with companies to help improve their computer security. 
</p>
<p>
These two books cover the genesis of all computer crime as we know it. Of course it's a much bigger problem now than it was in 1985, if for no other reason than there are far more computers far more interconnected with each other today than anyone could have possibly imagined in those early days. But what's really surprising is <b>how little has changed in the techniques of computer crime since 1985</b>.
</p>
The best primer of modern &ndash; and by that I mean year 2000 and later &ndash; computer crime is <a href="http://www.amazon.com/dp/0307588688/?tag=codihorr-20">Kingpin: How One Hacker Took Over the Billion-Dollar Cybercrime Underground</a>. Modern computer crime is more like the classic sort of crime you've seen in black and white movies: it's mostly about stealing large sums of money. But instead of busting it out of bank vaults Bonnie and Clyde style, it's now done electronically, mostly through ATM and credit card exploits.
<p>
<a href="http://www.amazon.com/dp/0307588688/?tag=codihorr-20"><img alt="Kingpin: How One Hacker Took Over the Billion-Dollar Cybercrime Underground" title="Kingpin: How One Hacker Took Over the Billion-Dollar Cybercrime Underground" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b017617554628970c-800wi" width="300" height="456" /></a>
</p>
<p>
Written by <a href="http://en.wikipedia.org/wiki/Kevin_Poulsen">Kevin Poulson</a>, another famous reformed hacker, <a href="http://www.amazon.com/dp/0307588688/?tag=codihorr-20">Kingpin</a> is also a compelling read. I've read it twice now. The passage I found most revealing is this one, written after the protagonist's release from prison in 2002:
</p>
<blockquote>
<p>
One of Max’s former clients in Silicon Valley tried to help by giving Max a $5,000 contract to perform a penetration test on the company’s network. The company liked Max and didn’t really care if he produced a report, but the hacker took the gig seriously. He bashed at the company’s firewalls for months, expecting one of the easy victories to which he’d grown accustomed as a white hat. But he was in for a surprise. The state of corporate security had improved while he was in the joint. He couldn’t make a dent in the network of his only client. His 100 percent success record was cracking.
</p>
<p>
Max pushed harder, only becoming more frustrated over his powerlessness. Finally, he tried something new. <b>Instead of looking for vulnerabilities in the company’s hardened servers, he targeted some of the employees individually.</b>
</p>
<p>These “client side” attacks are what most people experience of hackers—a spam e-mail arrives in your in-box, with a link to what purports to be an electronic greeting card or a funny picture. The download is actually an executable program, and if you ignore the warning message 
</p>
</blockquote>
<p>
All true; no hacker today would bother with frontal assaults. The chance of success is miniscule. Instead, they target the soft, creamy underbelly of all companies: the users inside. Max, the hacker described in Kingpin, bragged "I've been confident of my 100 percent [success] rate ever since." This is the new face of hacking. Or is it?
</p>
<p>
One of the most striking things about <a href="http://www.amazon.com/dp/0316037702/?tag=codihorr-20">Ghost In The Wires</a> is not how skilled a computer hacker Kevin Mitnick is (although he is undeniably great), but how devastatingly effective he is at <b>tricking people into revealing critical information in casual conversations</b>. Over and over again, in hundreds of subtle and clever ways. Whether it's 1985 or 2005, the amount of military-grade security you have on your computer systems matters not at all when someone using those computers <a href="http://www.codinghorror.com/blog/2005/07/the-dancing-bunnies-problem.html">clicks on the dancing bunny</a>. Social engineering is <a href="http://www.codinghorror.com/blog/2007/05/phishing-the-forever-hack.html">the most reliable and evergreen hacking technique ever devised</a>. It will outlive us all.
</p>
<p>
For a 2012 era example, consider <a href="http://www.emptyage.com/post/28679875595/yes-i-was-hacked-hard">the story of Mat Honan</a>. It is not unique.
</p>
<blockquote>
At 4:50 PM, someone got into my iCloud account, reset the password and sent the confirmation message about the reset to the trash. My password was a 7 digit alphanumeric that I didn’t use elsewhere. When I set it up, years and years ago, that seemed pretty secure at the time. But it’s not. Especially given that I’ve been using it for, well, years and years. My guess is they used brute force to get the password and then reset it to do the damage to my devices.
</blockquote>
<p>
I heard about this on Twitter when the story was originally developing, and my initial reaction was skepticism that anyone had bothered to brute force anything at all, since <a href="http://www.codinghorror.com/blog/2006/07/brute-force-key-attacks-are-for-dummies.html">brute forcing is for dummies</a>. Guess what it turned out to be. Go ahead, guess!
</p>
<p>
Did you by any chance guess <a href="http://www.wired.com/gadgetlab/2012/08/apple-amazon-mat-honan-hacking/all/">social engineering &hellip; of the account recovery process</a>? Bingo.
</p>
<blockquote>
<p>
After coming across my [Twitter] account, the hackers did some background research. My Twitter account linked to my personal website, where they found my Gmail address. Guessing that this was also the e-mail address I used for Twitter, Phobia went to Google’s account recovery page. He didn’t even have to actually attempt a recovery. This was just a recon mission.
</p>
<p>
Because I didn’t have Google’s two-factor authentication turned on, when Phobia entered my Gmail address, he could view the alternate e-mail I had set up for account recovery. Google partially obscures that information, starring out many characters, but there were enough characters available, m••••n@me.com. Jackpot.
</p>
<p>
Since he already had the e-mail, all he needed was my billing address and the last four digits of my credit card number to have Apple’s tech support issue him the keys to my account.
</p>
<p>
So how did he get this vital information? He began with the easy one. He got the billing address by doing a whois search on my personal web domain. If someone doesn’t have a domain, you can also look up his or her information on Spokeo, WhitePages, and PeopleSmart.
</p>
<p>
Getting a credit card number is tricker, but it also relies on taking advantage of a company’s back-end systems.  &hellip; First you call Amazon and tell them you are the account holder, and want to add a credit card number to the account. All you need is the name on the account, an associated e-mail address, and the billing address. Amazon then allows you to input a new credit card. (Wired used a bogus credit card number from a website that generates fake card numbers that conform with the industry’s published self-check algorithm.) Then you hang up.
</p>
<p>
Next you call back, and tell Amazon that you’ve lost access to your account. Upon providing a name, billing address, and the new credit card number you gave the company on the prior call, Amazon will allow you to add a new e-mail address to the account. From here, you go to the Amazon website, and send a password reset to the new e-mail account. This allows you to see all the credit cards on file for the account — not the complete numbers, just the last four digits. But, as we know, Apple only needs those last four digits. 
</p>
</blockquote>
<p>
Phobia, the hacker Mat Honan documents, was a minor who did this for laughs. One of his friends is <a href="http://www.wired.com/gadgetlab/2012/09/cosmo-the-god-who-fell-to-earth/all/">a 15 year old hacker who goes by the name of Cosmo</a>; he's the one who discovered the Amazon credit card technique described above. And what are teenage hackers up to these days?
</p>
<blockquote>
<p>
Xbox gamers know each other by their gamertags. And among young gamers it’s a lot cooler to have a simple gamertag like “Fred” than, say, “Fred1988Ohio.” Before Microsoft beefed up its security, getting a password-reset form on Windows Live (and thus hijacking a gamer tag) required only the name on the account and the last four digits and expiration date of the credit card on file. Derek discovered that the person who owned the “Cosmo” gamer tag also had a Netflix account. And that’s how he became Cosmo.
<p>
<p>
“I called Netflix and it was so easy,” he chuckles. “They said, ‘What’s your name?’ and I said, ‘Todd [Redacted],’ gave them his e-mail, and they said, ‘Alright your password is 12345,’ and I was signed in. I saw the last four digits of his credit card. That’s when I filled out the Windows Live password-reset form, which just required the first name and last name of the credit card holder, the last four digits, and the expiration date.”
</p>
<p>
This method still works. When Wired called Netflix, all we had to provide was the name and e-mail address on the account, and we were given the same password reset.
</p>
</blockquote>
<p>
The techniques are <a href="http://www.wired.com/gadgetlab/2012/09/cosmo-the-god-who-fell-to-earth/all/">eerily similar</a>. The only difference between Cosmo and Kevin Mitnick is that they were born in different decades. Computer crime is a whole new world now, but the techniques used today are almost identical to those used in the 1980s. If you want to engage in computer crime, don't waste your time developing ninja level hacking skills, <b>because computers are not the weak point</b>. 
</p>
<p>
People are.
</p>
<table> 
<tr><td class="welovecodinghorror"> 
[advertisement] How are you showing off your awesome? Create a <a href="http://careers.stackoverflow.com/cv" rel="nofollow">Stack Overflow Careers profile</a> and show off all of your hard work from Stack Overflow, Github, and virtually every other coding site. Who knows, you might even get recruited for a great <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">new position</a>! 
</td></tr> 
</table>

	

<!-- ad unit -->
<!-- this is where the inline ad unit will go -->
<!-- ad unit -->	
	
	<div class="posted">Posted by Jeff Atwood &nbsp;&nbsp; <a href="http://www.codinghorror.com/blog/2012/09/computer-crime-then-and-now.html#comments">25 Comments</a>
	</div> 
	
</div> <!-- blogbody -->


	



 
<div class="blogbody"> 
	
	<div id="i_was_a_teenage_hacker"></div> 
	<h2 class="title"><a href="http://www.codinghorror.com/blog/2012/08/i-was-a-teenage-hacker.html" class="title-link">I Was a Teenage Hacker</a></h2> 

  
	<h3 class="date">August  8, 2012</h3> 
	

<p>
Twenty-four years ago today, I had a very bad day.
</p>
<p>
On August 8, 1988, I was a senior in high school. I was working my after school and weekend job at Safeway as a cashier, when the store manager suddenly walked over and said I better stop ringing up customers and talk to my mother on the store phone right now. Mom told me to come home immediately because, well, there were police at the front door asking for me with some legal papers in hand. 
</p>
<p>
<a href="http://www.codinghorror.com/.a/6a0120a85dcdae970b0176171d0a24970c-pi"><img alt="He did unlawfully between June 7, 1988 and June 8, 1988 use a computer or computer network without authority and with the intent to temporarily or permanently remove computer data, in violation of Section 18.2-152.4 of the 1950 Code of Virginia, as amended." title="He did unlawfully between June 7, 1988 and June 8, 1988 use a computer or computer network without authority and with the intent to temporarily or permanently remove computer data, in violation of Section 18.2-152.4 of the 1950 Code of Virginia, as amended."  src="http://www.codinghorror.com/.a/6a0120a85dcdae970b0176171d08f5970c-800wi" width="720" height="163" /></a>
</p>
<p>
Like I said, definitely not a good day. The only sliver of good news was that I was still 17 at the time, so I enjoyed the many protections that the law provides to a minor. Which I shall now throw away by informing the world that I am a dirty, filthy, reprehensible adult criminal. <i>Thanks, law!</i>
</p>
<p>
One of the problems you had in the pre-Internet 1980s as a hardcore computer geek was that <b>all the best bulletin boards and online services were kind of expensive</b>. Either because you had to pay an hourly fee to access them, like <a href="v">CompuServe</a>, or because they were a long distance modem call. Or both. Even after <a href="http://en.wikipedia.org/wiki/Bell_System_divestiture#Effects">the 1984 AT&T breakup</a>, long distance at <a href="http://ask.metafilter.com/211826/Long-Distance-Rates-For-the-Late-Seventies-and-Early-Eighties">around 20-30 cents a minute</a> was a far, far cry from today's rates. (Does anyone actually even worry about how much voice calls cost any more, to anywhere in the world? This, my friends, is progress.)
</p>
<p>
Remember, too, that this is back when 9600 baud modems were <i>blazing</i>, state of the art devices. For perspective, the ultra-low-power wireless bluetooth on your phone is about 80 times faster. If you wanted to upload or download any <s>warez</s> software, that meant potentially <b>hours on your modem at rates of around $20/hour.</b> Adjusted for inflation, that's closer to $40 in 2012 dollars. My family wasn't well off enough to afford a second telephone line, so most of my calling was done late at night both because the rates were lower, and also so that I wouldn't be monopolizing the telephone. Nothing was worse than the dreaded "mom picked up the phone" disconnect to an <s>elite</s> difficult-to-access BBS with limited slots.</p>
<p>
One way or another, I eventually got involved with the seedier side of the community, even joining a lesser Apple // pirate group. Probably my main claim to fame is that while <a href="http://www.codinghorror.com/blog/2009/11/preserving-our-digital-pre-history.html">trolling BBSes</a>, I personally discovered and recruited a guy who turned out to be an amazing cracker. He was so good he eventually got recruited away. 
</p>
<p>
<a href="http://www.cerebus.de/psi5/words/docu/booklet.html"><img alt="Psi-5-trading-company" title="Psi-5-trading-company" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b0176171d36c2970c-800wi" width="640" height="400" /></a>
</p>
<p>
I was, at best, a footnote to a footnote to a footnote in Apple // history. This was mainly a process of self-discovery for me. I learned I was the type of geek who doesn't even bother attending his high school prom, partially because I was still afraid of girls even as a high school senior, yes, but mainly because I was so addicted to computers and playing my tiny role in these nascent online communities. I was, and am, OK with that. This is the circuitous path of 30 years that led me to create Stack Overflow. And there's more, so much more, but I can't talk about it yet.
</p>
<p>
But addicted, I think, is too weak a word for what I felt about being a part of these oddball, early online home computer communities. It was more like an all-consuming maniacal blood lust. So <b>obtaining access to free, unlimited long distance calling</b> rapidly became an urgent priority in my teenage life. I needed it. I needed it so bad. I had to have it to talk on the phone to the other members of my motley little crew, who were spread all over the USA, as well as for calling BBSes.
</p>
<p>
I can't remember exactly how I found it, probably on one of the BBSes, but I eventually discovered a local 804 area code number for "calling cards" that accepted a 5 digit PIN, entered via touch-tone phone. Try over and over, and you might find some valid PIN codes that let you attain the holy grail of free long distance calling. Only one small problem: it's a crime. But, at least to my addled teenage brain, this was a victimless crime, one that I <i>had</i> to commit. The spice must flow!
</p>
<p>
All I had to do is write software to tell the modem to dial over and over and try different combinations. Because I was a <a href="http://www.codinghorror.com/blog/2009/01/a-scripter-at-heart.html">self-taught programmer</a>, this was no problem. But because I was an <i>overachieving</i> self-taught programmer, I didn't just write a program. No, I went off and built <b>a full-blown toolkit in AppleBasic</b>, with complete documentation and the best possible text user interface I could muster, and then uploaded it to my favorite BBSes so every other addict could get their online modem fix, too. I called it <b>The Hacking Construction Set</b>, and I spent <i>months</i> building it. I didn't just <a href="http://www.codinghorror.com/blog/2004/12/gold-plating.html">gold plate</a>, I <i>platinum</i> plated this freaking thing, man. (Yes, I know the name isn't really correct. <a href="http://www.codinghorror.com/blog/2008/12/our-hacker-odyssey.html">I read as many 2600 textfiles as the next guy</a>. This is mere phreaking, not hacking, but I guess I was shooting for poetic license. Maybe you could use the long distance dialing codes to actually hack remote machines, or something.)
</p>
<p>
I never knew if anyone else ever used my little program to dial for calling codes. It certainly worked for me, and I tried my level best to make it work for all the possible dialing situations I could think of. It even had an intro screen with music and graphics of my own creation. But searching now, for the first time in 24 years, I <a href="http://nitroroms.com/show/file-info/L28583/Apple_II/Hacking%20Construction%20Set%20IIe%20(19xx)(Cyborg).zip.html">found my old Hacking Construction Set disk image on an Apple ROM site</a>. It even has real saved numbers in the dialing list! Someone <i>was</i> using my illicit software!
</p>
<p>
<img alt="Hacking-construction-set" title="Hacking-construction-set" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b017744036a91970d-800wi" width="562" height="386" />
</p>
<p>
If you're curious, fire up your favorite Apple // emulator and give <a href="http://www.codinghorror.com/files/hacking-construction-set-apple-ii-disk-image.dsk">the disk image</a> a spin. Don't forget to connect your modem. There's full blown documentation accessible from the main menu. Which, re-reading now, was actually not half bad, if I do say so myself:
</p>
<p>
<img alt="Hacking-construction-set-docs" title="Hacking-construction-set-docs" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b0176171d6ab7970c-800wi" width="562" height="385" /><br />
<img alt="Hacking-construction-set-docs-2" title="Hacking-construction-set-docs-2" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b016769286ca8970b-800wi" width="562" height="386" />
</p>
<p>
I used to regularly call BBSes in Florida, California, and Missouri? That's news to me; I haven't seen any of this stuff in over 24 years! All I did was upload a disk image to a few BBSes in 1986. After all that time, to discover that someone used and loved my little bit of software still gives me a little thrill. What higher praise is there for a software developer? 
</p>
<p>
About that trouble. <b>Using my own software got me in trouble with the law.</b> And deservedly so; what I wrote the software to do was illegal. I hired a local lawyer (who, as I recall, was missing a hand; he had a prosthetic hand that was almost impossible not to look at) who represented me. It was quite clear at preliminary hearings that the Chesterfield County court system did not see any computer crime cases, and they had absolutely no idea what to make of me, or what this was all about. All they saw was a smart kid with a bit of bad judgment who loved computers and was headed to the University of Virginia, most likely not a life as a career criminal. So the case was dismissed for the cost of lawyer's fees. Which, for the record, I had to pay myself, using my income as a Safeway cashier.
</p>
<p>
This was definitely a wake up call for me; in the summer of 1988, I was about to graduate from high school, and I thought I'd try being just a regular guy at college, with less of an obsessive focus on computers that causes me to get in trouble with the law, and perhaps spread my wings to other interests. Who knows, maybe even <i>girls!</i>
</p>
<p>
That didn't last long. Because after all these years, I must confess I've grown to love my own bad judgment. It's led me to the most fascinating places.
</p>
<table> 
<tr><td class="welovecodinghorror"> 
[advertisement] <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> matches the best developers (you!) with the best employers. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and even let employers find you.
</td></tr> 
</table> 

	

<!-- ad unit -->
<!-- this is where the inline ad unit will go -->
<!-- ad unit -->	
	
	<div class="posted">Posted by Jeff Atwood &nbsp;&nbsp; <a href="http://www.codinghorror.com/blog/2012/08/i-was-a-teenage-hacker.html#comments">75 Comments</a>
	</div> 
	
</div> <!-- blogbody -->


	



 
<div class="blogbody"> 
	
	<div id="today_is_goof_off_at_work_day"></div> 
	<h2 class="title"><a href="http://www.codinghorror.com/blog/2012/08/today-is-goof-off-at-work-day.html" class="title-link">Today is Goof Off at Work Day</a></h2> 

  
	<h3 class="date">August  2, 2012</h3> 
	

<p>
When you're hired at Google, you only have to do the job you were hired for 80% of the time. The other 20% of the time, you can work on <i>whatever you like</i> &ndash; provided it advances Google in some way. At least, that's the theory.
</p>
<p>
Google's 20 percent time policy is well known in software engineering circles by now. What's <i>not</i> as well known is that this concept <a href="http://www.fastcodesign.com/1663137/how-3m-gave-everyone-days-off-and-created-an-innovation-dynamo">dates all the way back to 1948 at 3M</a>.
</p>
<blockquote>
<p>In 1974, 3M scientist Art Fry came up with a clever invention. He thought if he could apply an adhesive (dreamed up by colleague Spencer Silver several years earlier) to the back of a piece of paper, he could create the perfect bookmark, one that kept place in his church hymnal. He called it the Post-It Note. Fry came up with the now iconic product (he talks to the Smithsonian about it <a href="http://invention.smithsonian.org/video/vid-popup.aspx?clip=1&id=518">here</a>) during his "15 percent time," a program at 3M that allows employees to use <b>a portion of their paid time to chase rainbows and hatch their own ideas</b>. It might seem like a squishy employee benefit. But the time has actually <b>produced many of the company's best-selling products</b> and has set a precedent for some of the top technology companies of the day, like Google and Hewlett-Packard.</p>
</blockquote>
<p>
There's not much documentation on HP's version of this; when I do find mentions of it, it's always referred to as a "convention", not an explicit policy. Robert X. Cringely <a href="http://www.cringely.com/2011/08/19/losing-the-hp-way/">provides more detail</a>:
</p>
<blockquote>
Google didn’t invent that: HP did. And the way the process was instituted at HP was quite formal in that the 10 percent time was after lunch on Fridays. Imagine what it must have been like on Friday afternoons in Palo Alto with every engineer working on some wild-ass idea. And the other part of the system was that those engineers had access to what they called “lab stores” — anything needed to do the job, whether it was a microscope or a magnetron or a barrel of acetone could be taken without question on Friday afternoons from the HP warehouses. This enabled a flurry of innovation that produced some of HP’s greatest products including those printers.
</blockquote>
<p>
Maybe HP did invent this, since they've been around since 1939. Dave Raggett, for example, apparently <a href="http://en.wikipedia.org/wiki/Dave_Raggett">played a major role in inventing HTML</a> on his 10% time at HP.
</p>
<p>
Although the concept predates Google, they've done more to validate it as an actual strategy and popularize it in tech circles than anyone else. Oddly enough, I can't <a href="https://www.google.com/search?q=site%3Awww.google.com+%2220-percent+time%22">find</a> any mention of the 20% time benefit listed on the <a href="http://www.google.com/about/jobs/lifeatgoogle/">current Google jobs page</a>, but it's an integral part of Google's culture. And for good reason: notable 20 percent projects include <a href="http://paulbuchheit.blogspot.com/2009/01/communicating-with-code.html">GMail</a>, Google News, Google Talk, and AdSense. According to ex-employee Marissa Meyer, <a href="http://en.wikipedia.org/wiki/Google#Innovation_Time_Off">as many as half</a> of Google's products originated from that 20% time.
</p>
<p>
At Hewlett-Packard, 3M, and Google, "many" of their best and most popular products come from <b>the thin sliver of time they granted employees to work on <i>whatever they wanted to.</i></b> What does this mean? Should we all be goofing off more at work and experimenting with our own ideas? That's what the book <a href="http://www.amazon.com/exec/obidos/ASIN/0062003232/codihorr-20">The 20% Doctrine</a> explores.
</p>
<a href="http://www.amazon.com/exec/obidos/ASIN/0062003232/codihorr-20"><img alt="The 20% Doctrine: How tinkering, goofing off, and breaking the rules at work drive success in business" title="The 20% Doctrine: How tinkering, goofing off, and breaking the rules at work drive success in business" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b017743d719a4970d-800wi" width="300" height="456" /></a>
</p>
<p>
Closely related to 20% time is the <b>Hack Day</b>. Hack Days carve out a specific 24 hour timeframe from the schedule, encouraging large groups to come together to work collaboratively (or in friendly competition) during that period. Chad Dickerson <a href="http://blog.chaddickerson.com/2012/04/18/the-20-percent-doctrine/">instituted one of the first</a> at Yahoo in 2005.
</p>
<blockquote>
<p>
The Friday before, I had organized the first internal Hack Day at Yahoo! with the help of a loosely-organized band of people around the company. The “hack” designation for the day was a tip of the hat to hacker culture, but also a nod to the fact that we were trying to fix a system that didn’t work particularly well. The idea was really simple: <b>all the engineers in our division were given the day off to build anything they wanted to build.</b> The only rules were to build something in 24 hours and then show it at the end of the period. The basic structure of the event itself was inspired by what we had seen at small startups, but no one had attempted such an event at a large scale at an established company.
</p>
<p>
The first Yahoo! Hack Day was clearly a success. In a company that was struggling to innovate, about seventy prototypes appeared out of nowhere in a single 24-hour period and they were presented in a joyfully enthusiastic environment where people whooped and yelled and cheered. Sleep-deprived, t-shirt-clad developers stayed late at work on a Friday night to show prototypes they had built for no other reason than they wanted to build something. In his seminal book about open source software, The Cathedral and the Bazaar, Eric Raymond wrote: <b>“Every good work of software starts by scratching a developer’s personal itch.”</b> There clearly had been a lot of developer itching around Yahoo! but it took Hack Day to let them issue a collective cathartic scratch.
</p>
</blockquote>
<p>
Atlassian's version, a <a href="http://www.atlassian.com/shipit-day">quarterly ShipIt Day</a>, also dates back to 2005. Interestingly, they also attempted to emulate Google's 20% time policy with <a href="http://blogs.atlassian.com/2009/02/atlassians_20_time_a_year_in_review/">mixed results</a>.
</p>
<blockquote>
Far and away, the biggest problem was scheduling time for 20% work. As one person put it, “Getting 20% time is incredibly difficult amongst all the pressure to deliver new features and bug fixes.” Atlassian has frequent product releases, so it is very hard for teams to schedule ‘down time’. Small teams in particular found it hard to afford time away from core product development. This wasn’t due to Team Leaders being harsh. It was often due to developers not wanting to increase the workload on their peers while they did 20% work. They like the products they are developing and are proud of their efforts. However, they don’t want to be seen as enjoying a privilege while others carry the workload.
</blockquote>
<p>
I think there's enough of a track record of documented success that <b>it's worth lobbying for something like Hack Days or 20% time wherever you work</b>. But before you do, consider if you and your company are ready:
</p>
<ol>
<li><b>Is there adequate slack in the schedule?</b>
<p>You can't realistically achieve 20% time, or even a single measly hack day, if there's absolutely zero slack in the schedule. If everyone around you is working full-tilt boogie as hard as they can, all the time, that's &hellip; probably not healthy. Sure, everyone has crunch times now and then, but if your work environment feels like <i>constant</i> crunch time, you'll need to deal with that first. For ammunition, try <a href="http://www.amazon.com/exec/obidos/ASIN/0767907698/codihorr-20">Tom Demarco's book Slack</a>.</p>
<li><b>Does daydreaming time matter?</b>
<p>If anyone gets flak for not "looking busy", your company's work culture may not be able to support an initiative like this. There has to be buy-in at the pointy-haired-boss level that time spent thinking and daydreaming is a valid part of work. Daydreaming is not the antithesis of work; on the contrary, creative problem solving <a href="http://www.sciencedaily.com/releases/2009/05/090511180702.htm"><i>requires</i> it</a>.</p>
<li><b>Is failure accepted?</b>
<p>When given the freedom to "work on whatever you want", the powers that be have to <i>really mean it</i> for the work to matter. Mostly that means providing employees the unfettered freedom to fail miserably at their skunkworks projects, sans repercussion or judgment. Without failure, and <i>lots</i> of the stuff, there can be no innovation, or true experimentation. The value of (quickly!) learning from failures and moving on is enormous.</p>
<li><b>Is individual experimentation respected?</b>
<p>If there isn't a healthy respect for individual experimentation versus the neverending pursuit of the Next Thing on the collective project task list, these initiatives are destined to fail. You have to truly believe, as a company, and as peers, that crucial innovations and improvements can come from <i>everyone</i> at the company at any time, in bottom-up fashion &ndash; they aren't delivered from on high at scheduled release intervals in the almighty Master Plan.
</p>
</ol>
<p>
Having some official acknowledgement that time spent working on whatever <i>you</i> think will make things better around these here parts is not just tolerated &ndash; but encouraged &ndash; might go a long way towards <b>making work feel a lot less like <i>work</i></b>.
</p>
<table> 
<tr><td class="welovecodinghorror"> 
[advertisement] What's your next career move? <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> has the best job listings from great companies, whether you're looking for opportunities at a startup or Fortune 500. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and let employers find you.
</td></tr> 
</table> 



	

<!-- ad unit -->
<!-- this is where the inline ad unit will go -->
<!-- ad unit -->	
	
	<div class="posted">Posted by Jeff Atwood &nbsp;&nbsp; <a href="http://www.codinghorror.com/blog/2012/08/today-is-goof-off-at-work-day.html#comments">39 Comments</a>
	</div> 
	
</div> <!-- blogbody -->


	



 
<div class="blogbody"> 
	
	<div id="the_ips_lcd_revolution"></div> 
	<h2 class="title"><a href="http://www.codinghorror.com/blog/2012/07/the-ips-lcd-revolution.html" class="title-link">The IPS LCD Revolution</a></h2> 

  
	<h3 class="date">July 26, 2012</h3> 
	

<p>
When I <a href="http://www.codinghorror.com/blog/2007/11/not-all-lcd-panels-are-created-equal.html">wrote about TN LCD panels</a> 5 years ago, I considered them acceptable, despite their overall mediocrity, mostly due to the massive price difference.
</p>
<blockquote>
Unfortunately, the vast majority of LCDs on the market now are TN. You can opt to pay a little bit more for one of the few models with *VA &ndash; if there are any available in the size you want. <b>*-IPS is widely considered the best all around LCD display technology</b>, but it is rapidly being pushed into the vertical "pro" graphics designer market due to the big jump in price. It's usually not an option, unless you're willing to pay more than twice as much for a monitor.
</blockquote>
<p>
But when the $499 iPad 3 delivers an <a href="http://www.codinghorror.com/blog/2012/03/welcome-to-the-post-pc-era.html">amazingly high resolution IPS panel</a> that's almost reference quality, I found myself a whole lot <i>less</i> satisfied with the 27" TN LCDs on my desktop. And on my laptop. And everywhere else in my life.
</p>
<p>
I'll spare you all the exposition and jump to the punchline. I am now the proud owner of three awesome high resolution (2560x1440) 27" IPS LCDs, and <b>I paid less than a thousand dollars for all three of them</b>.
</p>
<p>
<a href="http://www.codinghorror.com/.a/6a0120a85dcdae970b016768c9cc13970b-pi"><img alt="Three Korean LCDs" title="Three Korean LCDs" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b017743a4cc2a970d-800wi" width="720" height="301" /></a>
</p>
<p>
(If you're curious about the setup, I use <a href="http://www.codinghorror.com/blog/2007/09/lcd-monitor-arms.html">Ergotron monitor arms</a> to fit everything in there.)
</p>
<p>
I won't deny that it is a little weird, because everything is in Korean. I replaced the Korean 3 prong power cord in the power brick with a regular US power cord I had laying around. But a monitor is a monitor, and <i>the IPS panel is stunning</i>. <b>The difference between TN and IPS is vast in every measurable dimension.</b> No bad pixels on these three panels, either. Although, as my friend Scott Wasson of <a href="http://techreport.com">Tech Report</a> fame says, "every pixel on a TN panel is a bad pixel".
</p>
<p>
How is this possible? You can thank Korea. All three of these monitors were ordered from Korean eBay vendors, where a great 27" IPS LCD goes for the equivalent of around $250 in local currency. They tack on $100 for profit and shipping to the USA, then they're in business. It's definitely a grey market, but something is clearly out of whack, because no domestic monitor of similar quality and size can be had for anything under $700.
</p>
<p>
I wanted to get this out there, because I'm not sure how long this grey market will last, and these monitors are truly incredible deals. Heck, <b>it's worth it just to get out of the awful TN display ghetto most of us are stuck in</b>. Scott Wasson got the <i>exact</i> same model of Korean LCD I did, and <a href="http://techreport.com/articles.x/23291">his thorough review</a> concludes:
</p>
<blockquote>
Even with those last couple of quirks uncovered, I still feel like I won this thing in a drawing or something. $337 for a display of this quality is absolutely worth it, in my view. You just need to keep your eyes open to the risks going into the transaction, risks I hope I've illustrated in the preceding paragraphs. In many ways, grabbing a monitor like this one on the cheap from eBay is the ultimate tinkerer's gambit. It's risky, but the payoff is huge: a combination of rainbow-driven eye-socket ecstasy and the satisfying knowledge that you paid less than half what you might pay elsewhere for the same experience.
</blockquote>
<p>
There are literally dozens of variants of these Korean 27" LCDs, but the model I got is the <b>FSM-270YG</b>. Before you go rushing off to type ebay.com in your browser address bar, remember that these are bare-bones monitors being shipped from Korea. They work great, don't get me wrong, but they are the definition of no-frills:
</p>
<ul>
<li>Build quality is acceptable, but it's hardly Jony Ive Approved&trade;.
<li>These are glossy panels. Some other variants offer matte, if that's your bag.
<li>They only support basic dual-link DVI inputs, and <i>nothing</i>, I mean <i>nothing</i> else. 
<li>There is no on-screen display. The only functional controls are power and brightness (this one caught me out; you must hold down the brightness adjustment for many, many seconds before you see a change.)
</ul>
<p>
Although the noise-to-signal ratio is off the charts, it might be worth visiting <a href="http://www.overclock.net/t/1215866/reviewed-400-2560x1440-ips-no-ag-90hz-achieva-shimian-qh270-and-catleap-q270">the original overclock.net thread</a> on these inexpensive Korean monitors. There's some great info buried in there, if you can manage to extract it from the chaos. And if you're looking for a teardown of this particular FSM-270YG model (minus the OSD, though), check out <a href="http://www.tftcentral.co.uk/reviews/content/dgm_ips-2701wph.htm">the TFT Central review</a>.
</p>
<p>
In the past, I favored my wallet over my eyes, and chose TN. I now deeply regret that decision. But the tide is turning, and <b>high quality IPS displays are no longer extortionately expensive, particularly if you buy them directly from Korea</b>. Is it a little risky? Sure, but all signs point to the risk being fairly low.
</p>
<p>
In the end, I decided my eyes deserve better than TN. Maybe yours do too.
</p>
<table> 
<tr><td class="welovecodinghorror"> 
[advertisement] Hiring developers? Post your open positions with <a href="http://careers.stackoverflow.com" rel="nofollow">Stack Overflow Careers</a> and reach over 20MM awesome devs already on Stack Overflow. Create <a href="http://careers.stackoverflow.com/jobs/post" rel="nofollow"> your satisfaction-guaranteed job listing</a> today! 
</td></tr> 
</table> 

	

<!-- ad unit -->
<!-- this is where the inline ad unit will go -->
<!-- ad unit -->	
	
	<div class="posted">Posted by Jeff Atwood &nbsp;&nbsp; <a href="http://www.codinghorror.com/blog/2012/07/the-ips-lcd-revolution.html#comments">72 Comments</a>
	</div> 
	
</div> <!-- blogbody -->


	



 
<div class="blogbody"> 
	
	<div id="but_you_did_not_persuade_me"></div> 
	<h2 class="title"><a href="http://www.codinghorror.com/blog/2012/07/but-you-did-not-persuade-me.html" class="title-link">But You Did Not Persuade Me</a></h2> 

  
	<h3 class="date">July 23, 2012</h3> 
	

<p>
One of my favorite movie scenes in recent memory is from <a href="http://www.rottentomatoes.com/m/last_king_of_scotland/">The Last King of Scotland</a>, a dramatized "biography" of the megalomaniac dictator <a href="http://en.wikipedia.org/wiki/Idi_Amin">Idi Amin</a>, as seen through the eyes of a fictional Scottish personal physician.
</p>
<div id='myDiv1m9mCI' style="width:640px; height:360px"></div><script async src='http://embed.vive.ly:81/?ui=457270569500724d8028328.22735985&vi=wumpus-ZGQL2&di=myDiv1m9mCI&pt=embed_vfe&vw=640&vh=360'></script>
<blockquote>
<table>
<tr><td style="width:100px" valign="top">Idi Amin</td><td valign="top">I want you to tell me what to do!</td></tr>
<tr><td valign="top">Garrigan</td><td valign="top">You want ME to tell YOU what to do?</td></tr>
<tr><td valign="top">Amin</td><td valign="top">Yes, you are my advisor. You are the only one I can trust in here. <i>You should have told me not to throw the Asians out, in the first place!</i></td></tr>
<tr><td valign="top">Garrigan</td><td valign="top"><i>I DID!</i></td></tr>
<tr><td valign="top">Amin</td><td valign="top">But you did not persuade me, Nicholas. You did <i>not persuade me!</i></td></tr>
</table>
</blockquote>
<p>
If you haven't watched this movie yet, you should. It is amazing. (For trivia buffs, this is the video clip that prompted me to write <a href="http://www.codinghorror.com/blog/2010/09/youtube-vs-fair-use.html">YouTube vs. Fair Use</a>. The kind folks at <a href="http://www.getvively.com/">vive.ly</a> originally offered to host this fair use video clip, and I took them up on that offer, because I <i>still</i> can't find anywhere to host it.)
</p>
<p>
What I love about this tour de force of a scene &ndash; beyond the incredible acting &ndash; is that it illustrates just how powerful of a force persuasion really is. In the hands of a madman or demagogue, dangerously powerful. Hopefully you don't deal with too many insane dictators on a daily basis, but the reason this scene works so well is the unavoidable truth it exposes: <b>to have any hope of influencing others, <i>you must be able to persuade them</i>.</b>
</p>
<p>
Steve Yegge is as accomplished a software engineer as I can think of. I was amazed to hear him tell us repeatedly and at length on a podcast that <a href="http://www.codinghorror.com/blog/2008/10/the-one-thing-every-software-engineer-should-know.html">the one thing every software engineer should know</a> is not how to write amazing code, but how to market themselves and their project. What is marketing except <i>persuasion?</i>
</p>
<p>
Marc Hedlund, who founded Wesabe and is now the VP of Engineering at Etsy, thinks of himself not as a CEO or boss, but as the <a href="http://radar.oreilly.com/2006/12/engineering-management-hacks-e-1.html">Lobbyist-in-Chief</a>. I believe that could be re-written as Persuader-in-Chief with no loss of meaning or nuance.
</p>
<blockquote>
<p>
I was recently asked how I run our development team. I said, “Well, <b>basically I blog about something I think we should do, and if the blog post convinces the developers, they do it. If not, I lobby for it, and if that fails too, the idea falls on the floor.</b> They need my approval to launch something, but that’s it. That’s as much ‘running things’ as I do, and most of the ideas come from other people at this point, not from me and my blog posts. I’ve argued against some of our most successful ideas, so it’s a good thing I don’t try to exert more control.”
</p>
<p>
I’m exaggerating somewhat; of course I haven’t blogged about all of our ideas yet. But I do think of myself as Lobbyist-in-Chief, and I have lots of good examples of cases where I failed to talk people into an idea and it didn’t happen as a result. One person I said this to asked, “So who holds the product vision, then?” and I replied, “Well, I guess I do,” but really that’s not right. We all do. The product is the result of the ideas that together we’ve agreed to pursue. I recruit people based on their interest in and enthusiasm about the ideas behind Wesabe, and then set them loose, and we all talk and listen constantly. That’s how it works — and believe it or not, it does work.
</p>
</blockquote>
<p>
So how do we persuade? Primarily, I think, when we <a href="http://www.codinghorror.com/blog/2007/08/leading-by-example.html">lead by example</a>. Even if that means getting down on your knees and <a href="http://www.inc.com/magazine/20081201/how-hard-could-it-be-my-style-of-servant-leadership.html">cleaning a toilet</a> to show someone else how it's done. But maybe you're not a leader. Maybe you're just a lowly peon. Even as a peon, it's still possible to <a href="http://www.codinghorror.com/blog/2006/09/changing-your-organization-for-peons.html">persuade your team and those around you</a>. A commenter summarized this grassroots method of persuasion nicely:
</p>
<ul>
<li>His ideas were, on the whole, pretty good.
<li>He worked mostly bottom-up rather than top-down.
<li>He worked to gain the trust of others first by dogfooding his own recommendations before pushing them on others.
<li>He was patient and waited for the wheels to turn.
</ul>
<p>
Science and data are among the best ways to be objectively persuasive, but remember that data alone isn't the reductionist end of every single topic. Beware the <a href="http://stopdesign.com/archive/2009/03/20/goodbye-google.html">41 shades of blue</a> pitfall.
</p>
<blockquote>Yes, it’s true that a team at Google couldn’t decide between two blues, so they’re testing 41 shades between each blue to see which one performs better. I had a recent debate over whether a border should be 3, 4 or 5 pixels wide, and was asked to prove my case. I can’t operate in an environment like that. I’ve grown tired of debating such minuscule design decisions. There are more exciting design problems in this world to tackle.
</blockquote>
<p>
If I measure by click data alone, <a href="http://www.codinghorror.com/blog/2009/07/how-not-to-advertise-on-the-internet.html">all Internet advertising should have breasts in it</a>. Incorporate data, by all means. But you need to tell a bigger, grander, more inspiring story than that to be truly <i>persuasive</i>.
</p>
<p>
I <a href="http://www.codinghorror.com/blog/2007/07/whatever-happened-to-civility-on-the-internet.html">re-read Letter from a Birmingham Jail</a> every year because I believe it is the single best persuasive essay I've ever read. It is remarkably persuasive without ever resorting to anger, incivility, or invective. <a href="http://www.africa.upenn.edu/Articles_Gen/Letter_Birmingham.html">Read it now</a>. But do more than just read; <i>study</i> it. How does it work? Why does it work? Does it cite any data? What techniques make this essay so incredibly compelling? 
</p>
<p>
<a href="http://www.africa.upenn.edu/Articles_Gen/Letter_Birmingham.html"><img alt="Letter-from-birmingham-jail" title="Letter-from-birmingham-jail" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b0177438da35e970d-pi" width="300" height="406" /></a>
</p>
<p>
Nobody ever changed anything by remaining quiet, idly standing by, or blending into the faceless, voiceless masses. If you ever want to effect change, in your work, in your life, <b>you must learn to persuade others</b>.
</p>
<table> 
<tr><td class="welovecodinghorror"> 
[advertisement] How are you showing off your awesome? Create a <a href="http://careers.stackoverflow.com/cv" rel="nofollow">Stack Overflow Careers profile</a> and show off all of your hard work from Stack Overflow, Github, and virtually every other coding site. Who knows, you might even get recruited for a great <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">new position</a>! 
</td></tr> 
</table>

	

<!-- ad unit -->
<!-- this is where the inline ad unit will go -->
<!-- ad unit -->	
	
	<div class="posted">Posted by Jeff Atwood &nbsp;&nbsp; <a href="http://www.codinghorror.com/blog/2012/07/but-you-did-not-persuade-me.html#comments">17 Comments</a>
	</div> 
	
</div> <!-- blogbody -->


	



 
<div class="blogbody"> 
	
	<div id="new_programming_jargon"></div> 
	<h2 class="title"><a href="http://www.codinghorror.com/blog/2012/07/new-programming-jargon.html" class="title-link">New Programming Jargon</a></h2> 

  
	<h3 class="date">July 20, 2012</h3> 
	

<p>
Stack Overflow &ndash; like most online communities I've studied &ndash; naturally trends toward increased strictness over time. It's primarily a defense mechanism, an immune system of the sort a child develops after first entering school or daycare and being exposed to the wide, wide world of everyday sneezes and coughs with the occasional <a href="http://www.cdc.gov/mmwr/preview/mmwrhtml/mm6113a1.htm">meningitis outbreak</a>. It isn't always a pleasant process, but it is, unfortunately, a necessary one if you want to survive.
</p>
<p>
Consider this question from two years ago:
</p>
<blockquote>
<h3>New programming jargon you coined?</h3>
<p>
What programming terms have you coined that have taken off in your own circles (i.e. have heard others repeat it)? It might be within your own team, workplace or garnered greater popularity on the Internet.
</p>
<p>
Write your programming term, word or phrase in bold text followed by an explanation, citation and/or usage example so we can use it in appropriate context.
</p>
<p>
Don't repeat common jargon already ingrained in the programming culture like: kludge, automagically, cruft, etc. (unless you coined it).
</p>
<p>
This question serves in the spirit of communication among programmers through sharing of terminology with each other, to benefit us by its propagation within our own teams and environments.
</p>
</blockquote>
<p>
Is this even a <i>question</i>, really? How many answers does it have?
</p>
<p>
<b>Three hundred and eighty six!</b>
</p>
<p>
A question that invites 386 different "answers" isn't a question at all. It's an opinion survey, a poll, a List of X. I suppose you could argue that reading through all those responses would teach you <i>something</i> about programming, but it was pretty clear that the bulk of the responses were far more about laughs and GTKY (Getting to Know You) than learning. That's why it was eventually deleted by experienced Stack Overflow community members.  Although it is somewhat borderline in terms of learning, and I didn't <i>personally</i> vote to delete it, I tend to agree that it was correctly deleted. Though <a href="http://meta.stackoverflow.com/questions/122164/can-we-un-delete-new-programming-jargon-you-coined">opinions vary</a>.
</p>
<p>
I won't bore you with the entire history, our <a href="http://blog.stackoverflow.com/2010/01/stack-overflow-where-we-hate-fun/">so-called "war on fun"</a>, and the <a href="http://blog.stackoverflow.com/2012/01/the-trouble-with-popularity/">trouble with popularity</a>. Ultimately, <b>Stack Overflow is a college, <i>not</i> a frat house</b>. All the content on the site must exist to serve the mission of learning over entertainment &ndash; even if that means making difficult calls about removing some questions and answers that fail to meet those goals, plus or minus 10 percent.
</p>
<p>
In terms of programmer culture, though, there is precedent in the form of <a href="http://www.catb.org/jargon/">The Jargon File</a>. Unfortunately, we don't have a good designated place for deleted "too fun" questions to live, but all Stack Exchange content is licensed under Creative Commons in perpetuity. Which means, with proper attribution, we can give it a permanent home on our own blogs. So I did. I've collected <b>the top 30 Stack Overflow New Programming Jargon</b> entries below, as judged by the Stack Overflow community. Enjoy.*
</p>
<h3>1. Yoda Conditions</h3>
<div><small><a href="http://stackoverflow.com/users/251153/zneak">zneak</a></small></div>
<p>
<img alt="Yoda-conditions" title="Yoda-conditions" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b0176169611b8970c-800wi" width="361" height="132" />
</p>
<p>
Using <code>if(constant == variable)</code> instead of <code>if(variable == constant)</code>, like <code>if(4 == foo)</code>. Because it's like saying "if blue is the sky" or "if tall is the man".
</p>


<h3>2. Pokémon Exception Handling</h3>
<div><small><a href="http://stackoverflow.com/users/205426/woot4moo">woot4moo</a></small></div>
<p>
<img alt="Pokemon" title="Pokemon" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b0176169669bd970c-800wi" width="320" />
</p>
<p>
For when you just Gotta Catch 'Em All.
<pre>
try {
}
catch (Exception ex) {
   // Gotcha!
}
</pre>
</p>


<h3>3. Egyptian Brackets</h3>
<div><small><a href="http://stackoverflow.com/users/215403/computronium">computronium</a></small></div>
<p>
<img class="asset  asset-image at-xid-6a0120a85dcdae970b016768a17a2a970b" alt="Egyptian" title="Egyptian" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b016768a17a2a970b-800wi" width="200" />
</p>
<p>
You know the style of brackets where the opening brace goes on the end of the current line, e.g. this?
</p>
<pre>
if (a == b) {
    printf("hello");
}
</pre>
<p>
We used to refer to this style of brackets as "Egyptian brackets". Why? Compare the position of the brackets with the hands in the picture. (This style of brackets is used in Kernighan and Ritchie's book <a href="http://www.amazon.com/dp/0131103628/?tag=codihorr-20">The C Programming Language</a>, so it's known by many as K&R style.)
</p>


<h3>4. Smug Report</h3>
<div><small><a href="http://stackoverflow.com/users/38360/aaronaught">aaronaught</a></small></div>
<p>
<img alt="Pathreport-med" title="Pathreport-med" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b0177437c746d970d-800wi" width="200" />
</p>
<p>
A bug submitted by a user who thinks he knows a lot more about the system's design than he really does. Filled with irrelevant technical details and one or more suggestions (always wrong) about what he thinks is causing the problem and how we should fix it.
</p>
<p>
Also related to Drug Report (a report so utterly incomprehensible that whoever submitted it must have been smoking crack.), Chug Report (where the submitter is thought to have had one too many), and Shrug Report (a bug report with no error message or repro steps and only a vague description of the problem. Usually contains the phrase "doesn't work.")
</p>


<h3>5. A Duck</h3>
<div><small><a href="http://stackoverflow.com/users/129175/kyoryu">kyoryu</a></small></div>
<p>
<img alt="Duck-wireframe" title="Duck-wireframe" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b0177437c7a15970d-800wi" width="200" />
</p>
<p>
A feature added for no other reason than to draw management attention and be removed, thus avoiding unnecessary changes in other aspects of the product.
</p>
<p>
I don't know if I actually invented this term or not, but I am certainly not the originator of the story that spawned it.
</p>
<p>
This started as a piece of Interplay corporate lore. It was well known that producers (a game industry position, roughly equivalent to PMs) had to make a change to everything that was done. The assumption was that subconsciously they felt that if they didn't, they weren't adding value.
</p>
<p>
The artist working on the queen animations for Battle Chess was aware of this tendency, and came up with an innovative solution. He did the animations for the queen the way that he felt would be best, with one addition: he gave the queen a pet duck. He animated this duck through all of the queen's animations, had it flapping around the corners. He also took great care to make sure that it never overlapped the "actual" animation.
</p>
<p>
Eventually, it came time for the producer to review the animation set for the queen. The producer sat down and watched all of the animations. When they were done, he turned to the artist and said, <i>"that looks great. Just one thing - get rid of the duck."</i>
</p>


<h3>6. Refuctoring</h3>
<div><small><a href="http://www.codemanship.co.uk">Jason Gorman</a></small></div>
<p>
<img alt="Bottle-smashing" title="Bottle-smashing" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b0176169684ae970c-800wi" width="215" height="184" />
</p>
<p>
The process of taking a well-designed piece of code and, through a series of small, reversible changes, making it completely unmaintainable by anyone except yourself.
</p>


<h3>7. Stringly Typed</h3>
<div><small><a href="http://stackoverflow.com/users/83891/mark-simpson">Mark Simpson</a></small></div>
<p>
<img alt="Cat-string-values" title="Cat-string-values" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b0177437c9f53970d-800wi" width="200" />
</p>
<p>
A riff on strongly typed. Used to describe an implementation that needlessly relies on strings when programmer & refactor friendly options are available.
</p>
<p>
For example:
</p>
<ul>
<li>Method parameters that take strings when other more appropriate types should be used.
<li>On the occasion that a string is required in a method call (e.g. network service), the string is then passed and used throughout the rest of the call graph without first converting it to a more suitable internal representation (e.g. parse it and create an enum, then you have strong typing throughout the rest of your codebase).
<li>Message passing without using typed messages etc.
</ul>
<p>
Excessively stringly typed code is usually a pain to understand and detonates at runtime with errors that the compiler would normally find.
</p>

<h3>8. Heisenbug</h3>
<div><small>unknown</small></div>
<p>
<img  alt="Heisenbug" title="Heisenbug" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b016768a216ce970b-800wi" width="98" height="41" />
</p>
<p>A computer bug that disappears or alters its characteristics when an attempt is made to study it. (<a href="http://en.wikipedia.org/wiki/Unusual_software_bug#Heisenbug">Wikipedia</a>)</p>

<h3>9. Doctype Decoration</h3>
<div><small><a href="http://stackoverflow.com/users/23666/zurahn">Zurahn</a></small></div>
<p>
<img alt="Charlie-brown-christmas-tree" title="Charlie-brown-christmas-tree" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b016768a199fe970b-800wi" width="180" />
</p>
<p>
When web designers add a doctype declaration but don't bother to write valid markup.
</p>
<p>
<pre>
&lt;!DOCTYPE html&gt;
&lt;BLINK&gt;Now on sale!&lt;/BLINK&gt;
</pre>
</p>


<h3>10. Jimmy</h3>
<div><small><a href="http://stackoverflow.com/users/12560/gord">Gord</a></small></div>
<p>
<img alt="Jimmy" title="Jimmy" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b0177437cb7eb970d-800wi" width="117" height="206" />
</p>
<p>
A generalized name for the clueless/new developer.
</p>
<p>
Found as we were developing a framework component that required minimal knowledge of how it worked for the other developers. We would always phrase our questions as: <i>"What if Jimmy forgets to update the attribute?"</i>
</p>
<p>
This led to the term: "Jimmy-proof" when referring to well designed framework code.
</p>


<h3>11. Higgs-Bugson</h3>
<div><small><a href="http://stackoverflow.com/users/231999/gingerbreadboy">gingerbreadboy</a></small></div>
<p>
<img alt="Higgs-boson-guy" title="Higgs-boson-guy" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b0177437ccbc0970d-800wi" width="200" height="195" />
</p>
<p>
A hypothetical bug predicted to exist based on a small number of possibly related event log entries and vague anecdotal reports from users, but it is difficult (if not impossible) to reproduce on a dev machine because you don't really know if it's there, and if it is there what is causing it. (see <a href="http://en.wikipedia.org/wiki/Higgs_boson">Higgs-Boson</a>)
</p>


<h3>12. Nopping</h3>
<div><small><a href="http://stackoverflow.com/users/220587/stanislav">Stanislav</a></small></div>
<p>
<img alt="Statue-napping" title="Statue-napping" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b0177437cd4ee970d-800wi" width="300" height="201" />
</p>
<p>
I'm writing a <a href="http://lifeartificial.com/">scifi novel</a> from the POV of an AI, and their internal language has a lot of programming jargon in it. One of the more generalizable terms is "nopping", which comes from assembler NOP for no-operation. It's similar to 'nap', but doesn't imply sleep, just zoning out. <i>"Stanislav sat watching the screensaver and nopped for a while."</i>
</p>


<h3>13. Unicorny</h3>
<div><small><a href="http://stackoverflow.com/users/122162/yehuda-katz">Yehuda Katz</a></small></div>
<p>
<img alt="Stack-overflow-unicorn" title="Stack-overflow-unicorn" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b016768a1adc5970b-800wi" border="0" />
</p>
<p>
An adjective to describe a feature that's so early in the planning stages that it might as well be imaginary. We cribbed this one from Yehuda Katz, who used it in his closing keynote at last year's <a href="http://windycityrails.org/">Windy City Rails</a> to describe some of Rails' upcoming features.
</p>


<h3>14. Baklava Code</h3>
<div><small><a href="http://stackoverflow.com/users/25188/john-d-cook">John D. Cook</a></small></div>
<p>
<img alt="Baklava" title="Baklava" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b01761696b5b9970c-800wi" width="288" height="191" />
</p>
<p>
Code with <a href="http://www.johndcook.com/blog/2009/07/27/baklav-code/">too many layers</a>.
</p>
<p>
Baklava is a delicious pastry made with many paper-thin layers of phyllo dough. While thin layers are fine for a pastry, thin software layers don’t add much value, especially when you have many such layers piled on each other. Each layer has to be pushed onto your mental stack as you dive into the code. Furthermore, the layers of phyllo dough are permeable, allowing the honey to soak through. But software abstractions are best when they don’t leak. When you pile layer on top of layer in software, the layers are bound to leak.
</p>


<h3>15. Hindenbug</h3>
<div><small><a href="http://stackoverflow.com/users/43687/mike-robinson">Mike Robinson</a></small></div>
<p>
<img class="asset  asset-image at-xid-6a0120a85dcdae970b01761696b949970c" alt="Oh-the-huge-manatee" title="Oh-the-huge-manatee" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b01761696b949970c-800wi" width="300" />
</p>
<p>
A catastrophic data destroying bug. <i>"Oh the humanity!"</i> 
</p>
<p>
Also related to Counterbug (a bug you present when presented with a bug caused by the person presenting the bug) and Bloombug (a bug that accidentally generates money).
</p>

<h3>16. Fear Driven Development</h3>
<div><small><a href="http://stackoverflow.com/users/82062/arnis-l">Arnis L.</a></small></div>
<p>
<img alt="Youre-fired" title="Youre-fired" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b01761696bdde970c-800wi" width="180" height="250" />
</p>
<p>When project management adds more pressure (fires someone, moves deadlines forward, subtracts resources from the project, etc).</p>

<h3>17. Hydra Code</h3>
<div><small><a href="http://stackoverflow.com/users/108130/nick-dandoulakis">Nick Dandoulakis</a></small></div>
<p>
<img alt="800px-Hercules_slaying_the_Hydra" title="800px-Hercules_slaying_the_Hydra" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b0177437cf847970d-800wi" width="400" height="276" />
</p>
<p>Code that cannot be fixed. Like the <a href="http://en.wikipedia.org/wiki/Lernaean_Hydra">Hydra of legend</a>, every new fix introduces two new bugs. It should be rewritten.</p>

<h3>18. Common Law Feature</h3>
<div><small>anonymous</small></div>
<p>
<img alt="Common-law-marriage" title="Common-law-marriage" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b01761696d4ab970c-800wi" width="300" height="199" /></a><br />
</p>
<p>A bug in the application that has existed so long that it is now part of the expected functionality, and user support is required to actually fix it.</p>


<h3>19. Loch Ness Monster Bug</h3>
<div><small><a href="http://stackoverflow.com/users/109102/russau">russau</a></small></div>
<p>
<img alt="Loch-ness-monster" title="Loch-ness-monster" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b0177437d0c57970d-pi" width="250" height="201" />
</p>
<p>
I've started Loch Ness Monster bug for anything not reproducible / only sighted by one person. I'm hearing a lot of people in the office say it now. (Possible alternates: Bugfoot, Nessiebug.)
</p>

<h3>20. Ninja Comments</h3>
<div><small><a href="http://stackoverflow.com/users/48928/schar">schar</a></small></div>
<p>
<img alt="Ninja-comments" title="Ninja-comments" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b01761696ddaf970c-800wi" width="279" height="206" />
</p>
<p>
Also known as <i>invisible comments</i>, <i>secret comments</i>, or <i>no comments</i>.</p>

<h3>21. Smurf Naming Convention</h3>
<div><small><a href="http://stackoverflow.com/users/13753/sal">sal</a></small></div>
<p>
<img alt="Brainy-smurf" title="Brainy-smurf" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b016768a1ed59970b-800wi" width="180" height="250" />
</p>
<p>
When almost every class has the same prefix. IE, when a user clicks on the button, a <code>SmurfAccountView</code> passes a <code>SmurfAccountDTO</code> to the <code>SmurfAccountController</code>. The <code>SmurfID</code> is used to fetch a <code>SmurfOrderHistory</code> which is passed to the <code>SmurfHistoryMatch</code> before forwarding to either <code>SmurfHistoryReviewView</code> or <code>SmurfHistoryReportingView</code>. If a <code>SmurfErrorEvent</code> occurs it is logged by <code>SmurfErrorLogger</code> to <code>${app}/smurf/log/smurf/smurflog.log</code>
</p>

<h3>22. Protoduction</h3>
<div><small><a href="http://stackoverflow.com/users/7264/chris-pebble">Chris Pebble</a></small></div>
<p>
<img alt="Uno_motorcycle_segway" title="Uno_motorcycle_segway" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b016768a1ef6d970b-800wi" width="250" />
</p>
<p>
A prototype that ends up in production. Heard this from a tech at the Fermi lab. He said he didn't coin the term but had heard it used a number of times at Fermi.
</p>

<h3>23. Rubber Ducking</h3>
<div><small><a href="http://stackoverflow.com/users/62140/wesgarrison">wesgarrison</a></small></div>
<p>
<img alt="Sesamstrasse_ernie_bert" title="Sesamstrasse_ernie_bert" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b01761696ebb8970c-800wi" width="300" />
</p>
<p>
Sometimes, you just have to talk a problem out. I used to go to my boss and talk about something and he'd listen and then I'd just answer my own question and walk out without him saying a thing. I read about someone that put a rubber duck on their monitor so they could talk to it, so rubberducking is talking your way through a problem.
</p>


<h3>24. Banana Banana Banana</h3>
<div><small><a href="http://stackoverflow.com/users/40516/juliet">juliet</a></small></div>
<p>
<img alt="Dancing-banana" title="Dancing-banana" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b016768a202fc970b-800wi" width="150" height="208" />
</p>
<p>Placeholder text indicating that documentation is in progress or yet to be completed. Mostly used because FxCop complains when a public function lacks documentation.
</p>
<p>
<pre>
/// &lt;summary&gt;
/// banana banana banana
/// &lt;/summary&gt;
public CustomerValidationResponse Validate()
</pre>
</p>
<p>
Other food-related jargon: Programmer Fuel (Mountain Dew, coffee, Mate, anything which gets you well-caffeinated), Hot Potato (Http and Https respectively. Same number of syllables, but more fun to say), Cake (Marty's noob cake broke the build), Chunky Salsa (based on the <a href="http://tvtropes.org/pmwiki/pmwiki.php/Main/ChunkySalsaRule">chunky salsa rule</a>, a single critical error or bug that renders an entire system unusable, especially in a production environment).
</p>

<h3>25. Bicrement</h3>
<div><small><a href="http://stackoverflow.com/users/7734/evilteach">evilteach</a></small></div>
<p>
<img alt="Plus-two" title="Plus-two" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b016768a20a50970b-800wi" width="105" height="84"/>
</p>
<p>Adding 2 to a variable.</p>


<h3>26. Reality 101 Failure</h3>
<div><small><a href="http://stackoverflow.com/users/10659/loren-pechtel">Loren Pechtel</a></small></div>
<p>
<img alt="Feature-fail" title="Feature-fail" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b0176169708f8970c-800wi" width="300" height="200" /></a><br />
</p>

<p>The program (or more likely feature of a program) does exactly what was asked for but when it's deployed it turns out that the problem was misunderstood and it's basically useless.</p>

<h3>27. Mad Girlfriend Bug</h3>
<div><small><a href="http://stackoverflow.com/users/33560/jeduan-cornejo">Jeduan Cornejo</a></small></div>
<p>
<img alt="Mad-girlfriend-cartoon" title="Mad-girlfriend-cartoon" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b0177437d3dec970d-800wi" width="300" height="255" />
</p>
<p>When you see something strange happening, but the software is telling you everything is fine.
</p>

<h3>28. Megamoth</h3>
<div><small><a href="http://stackoverflow.com/users/182153/zolomon">zolomon</a></small></div>
<p>

<img alt="Mothra" title="Mothra" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b016768a2ad30970b-pi" width="380" height="329" />
</p>
<p>
Stands for MEGA MOnolithic meTHod. Often contained inside a <a href="http://en.wikipedia.org/wiki/God_object">God Object</a>, and usually stretches over two screens in height. Megamoths of greater size than 2k LOC have been sighted. Beware of the MEGAMOTH!
</p>

<h3>29. Hooker Code</h3>
<div><small><a href="http://stackoverflow.com/users/60794/nullpointerexception">NullPointerException</a></small></div>
<p>
<img alt="Muppet-pimps" title="Muppet-pimps" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b016768a21c28970b-800wi" width="300" height="249" />
</p>
<p>
Code that is problematic and causes application instability (application "goes down" often). <i>"Did the site go down again? Yeah, Jim must still have some hooker code in there."</i>
</p>

<h3>30. Jenga Code</h3>
<div><small><a href="http://stackoverflow.com/users/16123/sumit">sumit</a></small></div>
<p>
<img alt="Hasbro-jenga" title="Hasbro-jenga" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b016768a21e84970b-800wi" width="300" height="244" />
</p>
<p>
When the whole thing collapses after you alter a block of code.
</p>

<p>
This is just the top 30, what I consider to be the most likely candidates for <i>actual</i> new programming jargon based on community upvotes, not just "funny thing that another programmer typed on a webpage and I felt compelled to upvote for hilarity". Because that would be <i>Reddit</i>. If you're itching to see even more, there are plenty more answers to read &ndash; three hundred and fifty six more to be precise. Longtime Stack Overflow user Greg Hewgill maintains <a href="http://stackoverflow.hewgill.com/">an archive of old deleted Stack Overflow questions</a>, but this one hasn't quite made it in there yet. In the meantime, try <a href="http://www.stackprinter.com/export?question=2349378&service=stackoverflow">Stack Printer</a>, or if you have the requisite 10k rep on Stack Overflow, you can view the full <a href="http://stackoverflow.com/questions/2349378/new-programming-jargon-you-coined">soft-deleted question</a> on the site.
</p>

<p>
<small><small>* But don't enjoy it <i>too</i> much. We will be watching you.</small></small>
</p>

<table> 
<tr><td class="welovecodinghorror"> 
[advertisement] What's your next career move? <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> has the best job listings from great companies, whether you're looking for opportunities at a startup or Fortune 500. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and let employers find you.
</td></tr> 
</table> 

	

<!-- ad unit -->
<!-- this is where the inline ad unit will go -->
<!-- ad unit -->	
	
	<div class="posted">Posted by Jeff Atwood &nbsp;&nbsp; <a href="http://www.codinghorror.com/blog/2012/07/new-programming-jargon.html#comments">133 Comments</a>
	</div> 
	
</div> <!-- blogbody -->


	



 
<div class="blogbody"> 
	
	<div id="coding_horror_the_book"></div> 
	<h2 class="title"><a href="http://www.codinghorror.com/blog/2012/07/coding-horror-the-book.html" class="title-link">Coding Horror: The Book</a></h2> 

  
	<h3 class="date">July 10, 2012</h3> 
	

<p>
If I had to make a list of the top 10 things I've done in my life that I regret, "writing a book" would <a href="http://www.codinghorror.com/blog/2007/10/do-not-buy-this-book.html">definitely be on it</a>. I took on the book project mostly because it was an opportunity to work with a few friends whose company I enjoy. I had no illusions going in about the rapidly diminishing value of technical books in an era of pervasive high speed Internet access, and the book writing process only reinforced those feelings.
</p>
<blockquote>
<p>
In short, <b>do not write a book</b>. You'll put in mountains of effort for precious little reward, tangible or intangible. In the end, all you will have to show for it is an out-of-print dead tree tombstone. The only people who will be impressed by that are the clueless and the irrelevant.
</p>
<p>
As I see it, for the kind of technical content we're talking about, the online world of bits completely trumps the offline world of atoms:
</p>
<ul>
<li>It's forever searchable.
<li>You, not your publisher, will own it.
<li>It's instantly available to anyone, anywhere in the world.
<li>It can be cut and pasted; it can be downloaded; it can even be interactive.
<li>It can potentially generate ad revenue for you in perpetuity.
</ul>
<p>
And here's the best part: you can always opt to create a print version of your online content, and <b>instantly get the best of both worlds</b>. But it only makes sense in that order. Writing a book may seem like a worthy goal, but your time will be better spent channeling the massive effort of a book into creating content online. Every weakness I listed above completely melts away if you redirect your effort away from dead trees and spend it on growing a living, breathing website presence online.
</p>
</blockquote>
<p>
A few weeks ago, <a href="http://www.hyperink.com">Hyperink</a> approached me with a concept of packaging the more popular entries on Coding Horror, its "greatest hits" if you will, into an eBook. They seemed to have a good track record doing this with other established bloggers, and I figured it was time to finally practice what I've been preaching all these years. So you can now <b>download <a href="http://www.hyperink.com/Blog-To-Book-Effective-Programming-More-Than-Writing-Code-b1559">Effective Programming: More Than Writing Code</a></b> for an introductory price of <b>$2.99</b>. It's available in Kindle, iPad, Nook, and PDF formats.
</p>
<p>
<a href="http://www.hyperink.com/Blog-To-Book-Effective-Programming-More-Than-Writing-Code-b1559"><img alt="Blog to Book - Effective Programming: More Than Writing Code (Jeff Atwood)" title="Blog to Book - Effective Programming: More Than Writing Code (Jeff Atwood)" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b017616553856970c-800wi" width="246" height="330" /></a>
</p>
<p>
I've written about <a href="http://www.codinghorror.com/blog/2012/04/books-bits-vs-atoms.html">the ongoing tension between bits and atoms</a> recently, and I want to be clear: <b>I am a <a href="http://www.codinghorror.com/blog/2008/04/programmers-dont-read-books----but-you-should.html">fan of books</a></b>. I'm just not necessarily a fan of <i>writing</i> them. I remain deeply cynical about current book publishing models, which feel fundamentally broken to me. No matter the price of the book, outside of <a href="http://en.wikipedia.org/wiki/J._K._Rowling">J.K. Rowling</a>, you're basically <a href="http://goodexperience.com/2008/07/following-up-on-these.php">buying the author a drink</a>. 
</p>
<blockquote>
<p>
As the author, you can expect to make about a dollar on every copy that sells. The publisher makes several times that, so they make a nice profit with as few as, say, five thousand copies sold. Books that sell ten or fifteen thousand are rare, and considered strong sellers. So let's say you strike gold. After working on your book for a year or more, are you going to be happy with a payday of ten to fifteen grand?
</p>
<p>
Incidentally, don't expect your royalty check right away. The publisher gets paid first, by the bookstores, and the publisher may then hold on to your money for several months before they part with any of it. Yes, this is legal: it's in the publisher's contract. Not getting paid may be a bummer for you, but it's a great deal for the publisher, since they make interest on the float (all the money they owe to their authors) - which is another profit stream. They'll claim one reason for the delay is the sheer administrative challenge of cutting a check within three months (so many authors to keep track of! so many payments!)... a less ridiculous reason is that they have to wait to see whether bookstores are going to return unsold copies of your book for a full refund.
</p>
</blockquote>
<p>
Here's one real world example. John Resig sold 4,128 copies of Pro Javascript, for which he earned <a href="http://ejohn.org/blog/programming-book-profits">a grand total of $1.87 per book</a> once you factor in his advance. This is a book which still <a href="http://www.amazon.com/dp/1590597273/?tag=codihorr-20">sells for $29.54</a> on Amazon new.
</p>
<p>
<img alt="Resig-book-check" title="Resig-book-check" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b0177433bd197970d-800wi" width="648" height="304" />
</p>
<p>
Tellingly, John's second book seems <a href="http://jsninja.com/">permanently unfinished</a>. It's been listed as "in progress" since 2008. Can't say I blame him. (Update: <a href="http://ejohn.org/blog/secret-omens/">John explains</a>.)
</p>
<p>
When I buy books, <b>I want most of that money to go to the <i>author</i>, not the publishing middlemen</b>. I'd like to see a world where books are distributed electronically for very little cost, and almost all the profits go directly to the author. I'm not optimistic this will happen any time soon.
</p>
<p>
I admire people willing to write books, but I honestly think you have to be a little bit crazy to sit down and pound out an <i>entire book</i> these days. I believe smaller units of work are more realistic for most folks. I had an epic email discussion with <a href="http://en.wikipedia.org/wiki/Scott_Meyers">Scott Meyers</a> about the merits of technical book publishing versus blogging in 2008, and I don't think either of us budged from our initial positions. But he did launch a blog to document some of his thoughts on the matter, which ended with <a href="http://fastwareproject.blogspot.com/2010/07/blog-end.html">this post</a>:
</p>
<blockquote>
My longer-term goal was to engage in a dialogue with people interested in the production of fast software systems such that I could do a better job with the content of [my <a href="http://www.aristeia.com/Fastware/">upcoming book</a>].  Doing that, however, requires that I write up reasonable initial blog posts to spur discussion, and I've found that this is not something I enjoy.  To be honest, I view it as overhead.  Given a choice between doing background research to learn more about a topic (typically reading something, but possibly also viewing a technical presentation, listening to a technical podcast, or exchanging email with a technical expert) or writing up a blog entry to open discussion, I find myself almost invariably doing the research. One reason for this is that <b>I feel obliged to have done some research before I post</b>, anyway, and I typically find that once I'm done with the research, writing something up as a standalone blog entry is an enterprise that consumes more time than I'm willing to give it.  It's typically easier to write the result up in the form of a technical presentation, then give the presentation and get feedback that way.
</blockquote>
<p>
Overhead? I find this attitude perplexing; the research step is indeed critical, but no less important than writing up your results as a coherent blog entry. If you can't explain the results of your research to others, in writing, in a way they can understand, <i>you</i> don't understand it. And if you aren't willing to publish your research in the form of a simple web page that anyone in the world can visit and potentially learn from, <i>why did you bother doing that research in the first place?</i> Are you really <a href="http://www.codinghorror.com/blog/2007/05/maximizing-the-value-of-your-keystrokes.html">maximizing the value of your keystrokes</a>? More selfishly, you should always finish by writing up your results purely for your own self-improvement, if nothing else. As Steve Yegge <a href="https://sites.google.com/site/steveyegge2/you-should-write-blogs">once said</a>: "I have many of my best ideas and insights while blogging." Then you can take all that published writing, fold in feedback and comments from the community, add some editorial embellishment on top, and voilà &ndash; you have a great book.
</p>
<p>
Of course, there's no getting around the fact that writing is just plain <a href="http://www.codinghorror.com/blog/2006/02/fear-of-writing.html"><i>hard</i></a>. Seth Godin's <a href="http://sethgodin.typepad.com/seths_blog/2006/08/advice_for_auth.html">advice for authors</a> still stands:
</p>
<blockquote>
Lower your expectations. The happiest authors are the ones that don't expect much.
</blockquote>
<p>
Which, I think, is also good life advice in general. Maybe the easiest way to lower your expectations as an author is by attempting to write one or two blog entries a week, keep going as long as you can, and <a href="http://www.codinghorror.com/blog/2007/10/how-to-achieve-ultimate-blog-success-in-one-easy-step.html">see where that takes you</a>.
</p>
<table> 
<tr><td class="welovecodinghorror"> 
[advertisement] What's your next career move? <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> has the best job listings from great companies, whether you're looking for opportunities at a startup or Fortune 500. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and let employers find you.
</td></tr> 
</table> 

	

<!-- ad unit -->
<!-- this is where the inline ad unit will go -->
<!-- ad unit -->	
	
	<div class="posted">Posted by Jeff Atwood &nbsp;&nbsp; <a href="http://www.codinghorror.com/blog/2012/07/coding-horror-the-book.html#comments">60 Comments</a>
	</div> 
	
</div> <!-- blogbody -->


	



 
<div class="blogbody"> 
	
	<div id="betting_the_company_on_windows_8"></div> 
	<h2 class="title"><a href="http://www.codinghorror.com/blog/2012/07/betting-the-company-on-windows-8.html" class="title-link">Betting the Company on Windows 8</a></h2> 

  
	<h3 class="date">July  9, 2012</h3> 
	

<p>
I'd argue that <b>the last truly revolutionary version of Windows was <a href="http://en.wikipedia.org/wiki/Windows_95">Windows 95</a></b>. In the subsequent 17 years, we've seen a stream of mostly minor and often inconsequential design changes in Windows &ndash; at its core, you've got the same old stuff: a start menu, a desktop with icons, taskbar at the bottom, overlapping windows, toolbars, and pull-down menus.
</p>
<img alt="Win95-small" title="Win95-small" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b017616482409970c-800wi" width="320" height="240"  />
<img alt="Win7-small-desktop" title="Win7-small-desktop" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b0176164824f4970c-800wi" width="683" height="384" />
<p>
Windows 7 may be bigger, prettier, and more refined &ndash; finally, a <a href="http://www.codinghorror.com/blog/2009/07/windows-7-the-best-vista-service-pack-ever.html">proper sequel to Windows XP</a> &ndash; but it's also safe. Rote. Familiar. Maybe a little <i>too</i> safe.
</p>
<p>
Windows 95 was <a href="http://www.neowin.net/news/trivia-tuesday-windows-95s-golden-days">a big deal</a> <i>because</i> it innovated, <i>because</i> it was a break from the status quo. It sold 40 million copies in a year. It marked the coming of age of the Wintel beige box PC hegemony, and in the process dealt a near death blow to Apple and its rapidly aging System 7 OS.
</p>
<p>
But we all know how that story ends &ndash; with the iPhone in 2007, and most of all the iPad in 2010, Apple popularized the idea of <b>simple touch computing surfaces that <a href="http://www.codinghorror.com/blog/2012/03/welcome-to-the-post-pc-era.html">are now defining the Post-PC Era</a></b>. The best way to predict the future is to <a href="http://en.wikiquote.org/wiki/Alan_Kay">invent it</a>. And to their credit, Apple did; that is why their star is ascendant. Kind of absurdly <a href="http://www.codinghorror.com/blog/2011/10/serving-at-the-pleasure-of-the-king.html">scarily</a> ascendant, actually.
</p>
<p>
It's not like Microsoft isn't investing in R&D. The <a href="http://www.youtube.com/watch?v=SRU3NemA95k">Surface table</a> looked amazing. Unfortunately, it was also trapped in a <a href="http://www.youtube.com/watch?v=CZrr7AZ9nCY">ridiculous</a>, giant coffee table form factor that no regular person could afford or even want. That's too bad, because the Surface table was actually &hellip; kind of amazing. I've only ever seen one, in the lobby of a Seattle hotel in 2008. I went in skeptical, but when I actually got to <i>try</i> the Surface table, I came away impressed. It was a fascinating and intuitive multi-touch experience &hellip; that virtually nobody will ever get to experience or use. The iPad <i>also</i> offers a fascinating and intuitive multi-touch experience; let's compare:
</p>
<blockquote>a multi-touch Surface Table priced at $10,000 that, statistically speaking, nobody will ever be able to see or afford</blockquote>
<p>&hellip; versus &hellip;</p>
<blockquote>a multi-touch iPad in the hands of every consumer with $500 in their pocket</blockquote>
<p>Now guess which of these companies is currently worth umpteen bazillion dollars. Go on, guess! No, it's not <a href="http://en.wikipedia.org/wiki/Webvan">Webvan</a>, you jokers.</p>
<p>
After using the retina iPad for a while, I was shocked just how much of my everyday computing I can pull off on a tablet. Once you strip away all the needless complexities, isn't a tablet the simplest form of a computer there can be? How could it get any simpler than a tablet? Is this the ultimate and final form of computing? I wonder. It's a display in your hands, with easy full-screen applications that have simple oversize click targets to poke your finger at, and no confusing file systems to puzzle over or power-draining x86 backwards compatibility to worry about. Heck, <b>maybe a tablet is <i>better</i> than traditional PCs</b>, because it sidesteps all the accumulated cruft and hacks the PC ecosystem has accreted over the last 30 years.
</p>
<p>
If you're Microsoft, this is the point at which you should be crapping your pants in abject fear.
</p>
<p>
It is nothing less than the first stages of the heat death of the PC ecosystem, the formation of a tidal wave that will flow inexorably forward from this point. But you can't say they didn't see it coming. Bill Gates, of all people, <a href="http://www.lettersofnote.com/2011/07/internet-tidal-wave.html">saw this coming all the way back in 1995</a>, the same year Windows 95 was released.
</p>
<blockquote>
One scary possibility being discussed by Internet fans is whether they should get together and create something far less expensive than a PC which is powerful enough for Web browsing. This new platform would optimize for the datatypes on the Web. Gordon Bell and others approached Intel on this and decided Intel didn't care about a low cost device so they started suggesting that General Magic or another operating system with a non-Intel chip is the best solution.
</blockquote>
<p>
To be honest, I had almost written Microsoft off at this point, to the "whatever the abomination that IBM is now" enterprisey deadpool. It's not like they would disappear, necessarily, but they no longer had a viable horse in the race for the future of consumer computing devices. In these darkest of hours, I was actually considering &hellip; <i>switching to OS X</i>.
</p>
<p>
That is, until I tried Windows 8, and until I watched Microsoft unveil Surface. No, not the huge table one, the new one that's roughly the size (and one hopes, the price) of the iPad. I was expecting Yet Another Incremental Improvement to Windows, but I got something else altogether.
</p>
<p>
<a href="http://www.microsoft.com/surface/"><img alt="Microsoft-surface" title="Microsoft-surface" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b0177432eada5970d-800wi" width="600" height="460" /></a>
</p>
<p>
 It took a little longer than originally anticipated, but what's 17 years between friends?
</p>
<p>
Windows 8 is, in my humble opinion, the <b>most innovative version of Windows Microsoft has released since Windows 95</b>. Maybe ever. And it's good. Really good! I can't remember the last time I was this excited about a Windows release, except when I was kind of obsessively running betas of Windows 95 and waiting for Windows 95 to be released. <i>Don't judge me man!</i>
</p>
<p>
What's good about Windows 8? A ton of stuff. 
</p>
<ul>
<li>Excellent, beautiful, "live tile" Metro multi-touch tablet optimized interface, as honed from two prior Windows Phone releases.
<li>Integrated app store with updates for Metro apps. Yes, it actually works.
<li>Fantastic new overlay notification system.
<li>Noticeably faster to boot, faster to shut down, faster to sleep. It's <a href="http://www.pcmag.com/article2/0,2817,2406668,00.asp">just faster</a>.
<li>Awesome new Task Manager. I am seriously in love with this thing.
<li>Updated Office 2010 style "ribbon" Explorer UI.
<li>New copy dialog with graph of transfer rates over time, along with a visible moving average.
<li>Lower system requirements and smaller footprint than Windows 7.
</ul>
<p>
That's just a list off the top of my head. But don't take my word for it. <a href="http://windows.microsoft.com/en-US/windows-8/release-preview">Download the free Release Preview</a> and try Windows 8 yourself. 
</p>
<p>
Now, I will warn you that Windows 8 definitely has a <b>wee bit of Jekyll and Hyde going on</b>, because it smushes together two radically different paradigms: the old school mouse and keyboard centric desktop UI, and the new school tablet and touch centric Metro UI. It can be disconcerting to get kicked abruptly from one to the other. It's different, so there's a learning curve. (Protip: using your mouse scroll wheel in a Metro panel scrolls sideways. Don't forget the hover corners, or the right click, either.) But I have to say, this choice seems, at least so far, to be a bit saner approach than the super hard totally incompatible iOS/OSX divide in Apple land.
</p>
<p>
I expect that most people will decide early on whether they prefer treating their computer like a traditional laptop, or a tablet, and stick to their guns. Fortunately, the tablet stuff in Windows 8 doesn't get in the way. Even if only used as a glorified Start Menu, the Metro interface works surprisingly well &ndash; just start typing and match what you want to launch. 
</p>
<p>
What's even more amazing is that Microsoft is actually pricing the upgrade sanely. Can you believe <a href="http://windowsteamblog.com/windows/b/bloggingwindows/archive/2012/07/02/upgrade-to-windows-8-pro-for-39-99.aspx"><b>it's only $40 to upgrade from Windows 8</b></a> from XP, Vista, or Windows 7? It's like someone at Microsoft woke up and finally listened to what I've desperately been <a href="http://www.codinghorror.com/blog/2009/08/software-pricing-are-we-doing-it-wrong.html">trying to tell them for years</a>.
</p>
<p>
<b>In the post PC era, Microsoft is betting the company on Windows 8, desperately trying to serve two masters with one operating system</b>. The traditional mouse and keyboard desktop is no longer the default; it is still there, but slightly hidden from view, as the realm of computer nuts, power users, and geeks. For everyone else, the Metro UI puts an all new, highly visual touch and tablet friendly face on the old beige Wintel box. Will Microsoft succeed? I'm not sure yet. But based on what I've seen so far of Windows 8, its pricing, and the new Surface hardware &ndash; I'm cautiously optimistic. 
</p>
<table> 
<tr><td class="welovecodinghorror"> 
[advertisement] Hiring developers? Post your open positions with <a href="http://careers.stackoverflow.com" rel="nofollow">Stack Overflow Careers</a> and reach over 20MM awesome devs already on Stack Overflow. Create <a href="http://careers.stackoverflow.com/jobs/post" rel="nofollow"> your satisfaction-guaranteed job listing</a> today! 
</td></tr> 
</table> 

	

<!-- ad unit -->
<!-- this is where the inline ad unit will go -->
<!-- ad unit -->	
	
	<div class="posted">Posted by Jeff Atwood &nbsp;&nbsp; <a href="http://www.codinghorror.com/blog/2012/07/betting-the-company-on-windows-8.html#comments">93 Comments</a>
	</div> 
	
</div> <!-- blogbody -->


	



 
<div class="blogbody"> 
	
	<div id="the_php_singularity"></div> 
	<h2 class="title"><a href="http://www.codinghorror.com/blog/2012/06/the-php-singularity.html" class="title-link">The PHP Singularity</a></h2> 

  
	<h3 class="date">June 29, 2012</h3> 
	

<p>
Look at this incredible thing Ian Baker created. <i>Look at it!</i>
</p>
<p>
<a href="http://www.flickr.com/photos/raindrift/sets/72157629492908038"><img alt="The PHP hammer" title="The PHP hammer" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b017742d249d5970d-800wi" width="502" height="370" /></a>
</p>
<p>
What you're seeing is not Photoshopped. This is an actual photo of a real world, honest to God <i>double-clawed hammer</i>. Such a thing exists. Isn't that amazing? And also, perhaps, a little disturbing?
</p>
<p>
That wondrous hammer is a delightful real-world acknowledgement of the epic blog entry <a href="http://me.veekun.com/blog/2012/04/09/php-a-fractal-of-bad-design/">PHP: A Fractal of Bad Design</a>.
</p>
<blockquote>
<p>
I can’t even say what’s wrong with <a href="http://en.wikipedia.org/wiki/PHP">PHP</a>, because &ndash; okay. Imagine you have uh, a toolbox. A set of tools. Looks okay, standard stuff in there.
</p>
<p>
You pull out a screwdriver, and you see it’s one of those weird tri-headed things. Okay, well, that’s not very useful to you, but you guess it comes in handy sometimes.
</p>
<p>
<b>You pull out the hammer, but to your dismay, it has the claw part on both sides.</b> Still serviceable though, I mean, you can hit nails with the middle of the head holding it sideways.
</p>
<p>
You pull out the pliers, but they don’t have those serrated surfaces; it’s flat and smooth. That’s less useful, but it still turns bolts well enough, so whatever.
</p>
<p>
And on you go. Everything in the box is kind of weird and quirky, but maybe not enough to make it completely worthless. And there’s no clear problem with the set as a whole; it still has all the tools.
</p>
<p>
Now imagine you meet millions of carpenters using this toolbox who tell you “well hey what’s the problem with these tools? They’re all I’ve ever used and they work fine!” And the carpenters show you the houses they’ve built, where every room is a pentagon and the roof is upside-down. And you knock on the front door and it just collapses inwards and they all yell at you for breaking their door.
</p>
<p>
That’s what’s wrong with PHP.
</p>
</blockquote>
<p>
Remember the immediate visceral reaction you had to the double-clawed hammer? That's exactly the reaction most sane programmers have to their first encounter with the web programming language PHP.
</p>
<p>
This has been going on for <i>years</i>. I published my contribution to the genre in 2008 with <a href="http://www.codinghorror.com/blog/2008/05/php-sucks-but-it-doesnt-matter.html">PHP Sucks, But It Doesn't Matter</a>.
</p>
<blockquote>
<p>I'm no language elitist, but <b>language design is hard</b>. There's a reason that some of the most famous computer scientists in the world are also language designers. And it's a crying shame none of them ever had the opportunity to work on PHP. From what I've seen of it, <strong>PHP isn't so much a <i>language</i> as a random collection of arbitrary stuff, a virtual explosion at the keyword and function factory.</strong> Bear in mind this is coming from a guy who was <a href="http://www.codinghorror.com/blog/2008/04/everything-i-needed-to-know-about-programming-i-learned-from-basic.html">weaned on BASIC</a>, a language that gets about as much respect as <a href="http://en.wikipedia.org/wiki/Rodney_Dangerfield">Rodney Dangerfield</a>. So I am not unfamiliar with the genre.</p>
</blockquote>
<p>
Except now it's 2012, and fellow programmers are <i>still</i> writing long screeds bemoaning the awfulness of PHP!
</p>
<p>
What's depressing is not that PHP is horribly designed. Does anyone even dispute that PHP is the worst designed mainstream "language" to blight our craft in decades? What's truly depressing is that <b>so little has changed</b>. Just one year ago, legendary hacker Jamie Zawinski had <a href="http://www.jwz.org/blog/2011/05/computational-feces/">this to say</a> about PHP:
</p>
<blockquote>
I used to think that PHP was the biggest, stinkiest dump that the computer industry had taken on my life in a decade. Then I started needing to do things that could only be accomplished in AppleScript.
</blockquote>
<p>
Is PHP so broken as to be unworkable? No. Clearly not. The great crime of PHP is its utter banality. Its continued propularity is living proof that quality is irrelevant; cheap and popular and <i>everywhere</i> always wins. <a href="https://twitter.com/codinghorror/status/190943243511406592">PHP is the Nickelback of programming languages</a>. And, yes, out of frustration with the status quo I may have recently <a href="https://twitter.com/codinghorror/status/213739167585284097">referred</a> to Rasmus Lerdorf, the father of PHP, as history's greatest monster. I've told myself a <i>million times</i> to stop exaggerating. 
</p>
<p>
The hammer metaphor is apt, because at its core, this is about proper tooling. As <a href="http://weblogs.asp.net/alex_papadimoulis/archive/2005/05/25/408925.aspx">presciently noted by Alex Papadimoulis</a>:
<p>
<blockquote>
<p>
<i>A client has asked me to build and install a custom shelving system. I'm at the point where I need to nail it, but I'm not sure what to use to pound the nails in. Should I use an old shoe or a glass bottle?</i>
</p>
<p>
How would you answer the question?
</p>
<ol type="a">
<li>It depends. If you are looking to pound a small (20lb) nail in something like drywall, you'll find it much easier to use the bottle, especially if the shoe is dirty. However, if you are trying to drive a heavy nail into some wood, go with the shoe: the bottle will shatter in your hand.<br/><br/></li>
<li>There is something fundamentally wrong with the way you are building; you need to use real tools. Yes, it may involve a trip to the toolbox (or even to the hardware store), but doing it the right way is going to save a lot of time, money, and aggravation through the lifecycle of your product. You need to stop building things for money until you understand the basics of construction.</li>
</ol>
</blockquote>
What we ought to be talking about is not how terrible PHP is &ndash; although its <i>continued</i> terribleness is a particularly damning indictment &ndash; but how we programmers can culturally displace a deeply flawed tool with a better one. <b>How do we encourage new programmers to avoid picking up the double clawed hammer in favor of, well, a regular hammer?</b>
</p>
<p>
This is not an abstract, academic concern to me. I'm starting a new open source web project with the goal of making the code as freely and easily runnable to the world as possible. Despite the serious problems with PHP, <b>I was forced to consider it</b>. If you want to produce <a href="http://www.codinghorror.com/blog/2006/08/open-source-free-as-in-free.html">free-as-in-whatever</a> code that runs on virtually every server in the world with zero friction or configuration hassles, PHP is damn near your only option. If that doesn't scare you, then check your pulse, because you might be dead. 
</p>
<p>
<img alt="Everything goes with PHP sauce! Including crushing depression." title="Everything goes with PHP sauce! Including crushing depression." src="http://www.codinghorror.com/.a/6a0120a85dcdae970b017615ed14c4970c-800wi" width="300" height="401" />
</p>
<p>
Therefore, I'd like to submit a humble suggestion to my fellow programmers. The next time you feel the urge to write Yet Another Epic Critique of PHP, consider that:
</p>
<ol>
<li>We get it already. PHP is horrible, but it's used everywhere. Guess what? It was just as horrible in 2008. And 2005. And 2002. There's a pattern here, but it's subtle. You have to look very closely to see it. On second thought, never mind. You're probably not smart enough to figure it out.<br/><br/>
<li>The best way to combat something as pervasively and institutionally awful as PHP is not to point out all its (many, many, <i>many</i>) faults, but to <b>build compelling alternatives</b> and <b>make sure these alternatives are equally pervasive, as easy to set up and use as possible</b>.
</ol>
<p>
We've got a long way to go. One of the <i>explicit</i> goals of my next project is to do whatever we can to buff up a &hellip; particular &hellip; open source language ecosystem such that it can truly compete with PHP in ease of installation and deployment. 
</p>
<p>
From my perspective, the point of all these "PHP is broken" rants is not just to complain, but to help educate and potentially warn off <i>new</i> coders starting <i>new</i> codebases. Some fine, even historic work has been done in PHP despite the madness, unquestionably. But now we need to work together to <i>fix</i> what is broken. The best way to fix the PHP problem at this point is to <b>make the alternatives so outstanding that the choice of the better hammer becomes <i>obvious</i>.</b> 
</p>
<p>
That's the PHP Singularity I'm hoping for. I'm trying like hell to do my part to make it happen. How about you?
</p>
<table> 
<tr><td class="welovecodinghorror"> 
[advertisement] How are you showing off your awesome? Create a <a href="http://careers.stackoverflow.com/cv" rel="nofollow">Stack Overflow Careers profile</a> and show off all of your hard work from Stack Overflow, Github, and virtually every other coding site. Who knows, you might even get recruited for a great <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">new position</a>! 
</td></tr> 
</table>

	

<!-- ad unit -->
<!-- this is where the inline ad unit will go -->
<!-- ad unit -->	
	
	<div class="posted">Posted by Jeff Atwood &nbsp;&nbsp; <a href="http://www.codinghorror.com/blog/2012/06/the-php-singularity.html#comments">187 Comments</a>
	</div> 
	
</div> <!-- blogbody -->


	



 
<div class="blogbody"> 
	
	<div id="concluding_the_great_mp3_bitrate_experiment"></div> 
	<h2 class="title"><a href="http://www.codinghorror.com/blog/2012/06/concluding-the-great-mp3-bitrate-experiment.html" class="title-link">Concluding the Great MP3 Bitrate Experiment</a></h2> 

  
	<h3 class="date">June 27, 2012</h3> 
	

<p>
And now for the dramatic conclusion to <a href="http://www.codinghorror.com/blog/2012/06/the-great-mp3-bitrate-experiment.html">The Great MP3 Bitrate Experiment</a> you've all been waiting for! The actual bitrates of each audio sample are revealed below, along with how many times each was clicked per the <a href="http://goo.gl">goo.gl</a> URL shortener stats between Thursday, June 21st and Tuesday, June 26th.
</p>
<p>
<table width="350px">
<tr><td><a href="http://goo.gl/o4zy7+">Limburger</a></td><td align="right">~160kbps VBR</td><td align="right">10,265</td></tr>
<tr><td><a href="http://goo.gl/g8nfp+">Cheddar</a></td><td align="right">320kbps CBR</td><td align="right">7,183</td></tr>
<tr><td><a href="http://goo.gl/UCl2v+">Gouda</a></td><td align="right">raw CD</td><td align="right">6,159</td></tr>
<tr><td><a href="http://goo.gl/q7wFo+">Brie</a></td><td align="right">~192kbps VBR</td><td align="right">5,508</td></tr>
<tr><td><a href="http://goo.gl/qHPc7+">Feta</a></td><td align="right">128kbps CBR</td><td align="right">5,567</td></tr>
</table>
</p>
<p>
During that six day period, my overall Amazon CloudFront and S3 bill for these downloaded audio samples was $103.72 for 800 GB of data, across 200k requests.
</p>
<p>
Based on the raw click stats, it looks like a bunch of folks clicked on the first and second files, then lost interest. Probably because of, y'know, <a href="https://twitter.com/#!/codinghorror/media/slideshow?url=pic.twitter.com%2FUcSrzYfV">Starship</a>. Still, it's encouraging to note that the last two files were both clicked about 5.5k times for those that toughed their way out to the very end. Of those listeners, <b>3,512</b> went on to contribute results. Not bad at all! I mean, considering I made everyone listen to what <a href="http://en.wikipedia.org/wiki/List_of_music_considered_the_worst#Songs">some people consider to be one of the <s>best</s>worst "rock" songs of all time</a>. You guys are troopers, taking one in the ear for the team in the name of <i>science</i>. That's what I admire about you.
</p>
<p>
I belatedly realized after creating this experiment that <b>there was an easy way to cheat</b>. Simply compress all the samples with <a href="http://flac.sourceforge.net/">FLAC</a>, then sort by filesize.
</p>
<pre>
10,836,505   We+Built+This+City+-+Excerpt+(Feta).flac
11,054,288   We+Built+This+City+-+Excerpt+(Limburger).flac
11,294,757   We+Built+This+City+-+Excerpt+(Brie).flac
11,731,999   We+Built+This+City+-+Excerpt+(Cheddar).flac
11,816,415   We+Built+This+City+-+Excerpt+(Gouda).flac
</pre>
<p>
The higher the bitrate, apparently, the less compressible the audio files are with lossless FLAC compression. It's a small difference in absolute file size, but it's enough to sort <i>exactly</i> with quality. At least you can independently verify that I wasn't tricking anyone in this experiment; each sample was indeed different, and the bitrates are what I said they were.
</p>
<p>
But you guys and gals wouldn't do that, because you aren't dirty, filthy cheaters, right? Of course not. Let's go over the actual results. Remember each sample was ranked in a simple web form from <b>1 to 5</b>, where 1 is worst quality, and 5 is highest quality.
</p>
<p>
<img alt="Mp3-experiment-results-graph" title="Mp3-experiment-results-graph" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b017615e00eec970c-800wi" width="573" height="383" />
</p>
<p>
The summary statistics for the 3,512 data points:
</p>

<p>
<table cellpadding=2 cellspacing=2 width="450px">

<tr>
<td></td>
<td></td>
<td>Avg</td>
<td>Std dev</td>
</tr>

<tr>
<td>160kbps VBR</td>
<td>(Limburger)</td>
<td>3.49</td>
<td>1.38</td>
</tr>

<tr>
<td>320kbps CBR</td>
<td>(Cheddar)</td>
<td>3.30</td>
<td>1.34</td>
</tr>

<tr>
<td>raw CD audio</td>
<td>(Gouda)</td>
<td>3.34</td>
<td>1.26</td>
</tr>

<tr>
<td>192kbps VBR</td>
<td>(Brie)</td>
<td>3.27</td>
<td>1.29</td>
</tr>

<tr>
<td>128kbps CBR</td>
<td>(Feta)</td>
<td>2.95</td>
<td>1.40</td>
</tr>

</table>
</p>
<p>
(If you'd like to perform more detailed statistical analysis, <a href="http://www.codinghorror.com/files/codinghorror-mp3-experiment-2012-final.zip">download the Excel 2010 spreadsheet with all the data</a> and have at it.)
</p>

<p>
Even without busting out hard-core statistics, I think it's clear from the basic summary statistics graph that <b>only one audio sample here was discernably different than the rest &ndash; the 128kbps CBR</b>. And by different I mean "audibly worse". I've maintained for a long, long time that typical 128kbps MP3s are not acceptable quality. Even for the worst song ever. So I guess we can consider this yet another blind listening test proving that point. Give us VBR at an average bitrate higher than 128kbps, or give us death!
</p>
<p>
But what about the claim that people with dog ears can hear the difference between the higher bitrate MP3 samples? Well, first off, it's incredibly strange that the first sample &ndash; encoded at a mere 160kbps &ndash; does better on average than everything else. I think it's got to be bias from appearing first in the list of audio samples. It's kind of an outlier here for no good reason, so we have to almost throw it out. More fuel for the argument that <b>people can't hear a difference at bitrates above 128kbps</b>, and even if they do, they're probably imagining it. If we didn't throw out this result, we'd have to conclude that the 160kbps sample was somehow superior to the raw CD audio, which is &hellip; clearly insane.
</p>
<p>
Running <a href="http://en.wikipedia.org/wiki/Student's_t-test">T-Test</a> and <a href="http://en.wikipedia.org/wiki/Analysis_of_variance">Analysis of Variance</a> (it's in the spreadsheet) on the non-insane results, I can confirm that the 128kbps CBR sample is lower quality with an <i>extremely</i> high degree of statistical confidence. Beyond that, as you'd expect, nobody can hear the difference between a 320kbps CBR audio file and the CD. And the 192kbps VBR results have a <i>barely</i> statistically significant difference versus the raw CD audio at the 95% confidence level. I'm talking absolutely <i>wafer thin</i> here. 
</p>
<p>
Anyway, between the anomalous 160kbps result and the blink-and-you'll-miss-it statistical difference between the 192kbps result and the raw CD audio, I'm comfortable calling this one as I originally saw it. The data from this experiment confirms what I thought all along: for pure listening, the LAME defaults of 192kbps variable bit rate encoding do indeed provide a safe, optimal aural bang for the byte &ndash; <b>even dogs won't be able to hear the difference between 192kbps VBR MP3 tracks and the original CD.</b>
</p>
<table> 
<tr><td class="welovecodinghorror"> 
[advertisement] <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> matches the best developers (you!) with the best employers. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and even let employers find you.
</td></tr> 
</table> 

	

<!-- ad unit -->
<!-- this is where the inline ad unit will go -->
<!-- ad unit -->	
	
	<div class="posted">Posted by Jeff Atwood &nbsp;&nbsp; <a href="http://www.codinghorror.com/blog/2012/06/concluding-the-great-mp3-bitrate-experiment.html#comments">78 Comments</a>
	</div> 
	
</div> <!-- blogbody -->


	
<div class="footernav" style="font-size:120%; font-weight:bold;">
	
							
	
	<div style="float:left;"><a href="http://codinghorror.com/blog/page/2/">&laquo; Read older entries</a></div>
	
	
</div>
	


 
 
<div id="footer">Content &copy; 2012 <a rel="author" href="https://profiles.google.com/codinghorror1">Jeff Atwood</a>.  Logo image used with permission of the author. &copy; 1993 Steven C. McConnell. All Rights Reserved.</div>  

</div> <!-- blog -->
</div> <!-- content -->
 
<div id="links"> 
<div class="sidetitle">Recently</div> 
<div class="side"> 


  <a href="http://www.codinghorror.com/blog/2012/09/computer-crime-then-and-now.html">Computer Crime, Then and Now</a><br />

  <a href="http://www.codinghorror.com/blog/2012/08/i-was-a-teenage-hacker.html">I Was a Teenage Hacker</a><br />

  <a href="http://www.codinghorror.com/blog/2012/08/today-is-goof-off-at-work-day.html">Today is Goof Off at Work Day</a><br />

  <a href="http://www.codinghorror.com/blog/2012/07/the-ips-lcd-revolution.html">The IPS LCD Revolution</a><br />

  <a href="http://www.codinghorror.com/blog/2012/07/but-you-did-not-persuade-me.html">But You Did Not Persuade Me</a><br />

  <a href="http://www.codinghorror.com/blog/2012/07/new-programming-jargon.html">New Programming Jargon</a><br />

  <a href="http://www.codinghorror.com/blog/2012/07/coding-horror-the-book.html">Coding Horror: The Book</a><br />

  <a href="http://www.codinghorror.com/blog/2012/07/betting-the-company-on-windows-8.html">Betting the Company on Windows 8</a><br />

  <a href="http://www.codinghorror.com/blog/2012/06/the-php-singularity.html">The PHP Singularity</a><br />

  <a href="http://www.codinghorror.com/blog/2012/06/concluding-the-great-mp3-bitrate-experiment.html">Concluding the Great MP3 Bitrate Experiment</a><br />


</div>

<p></p>
<div id="influads_block" class="influads_block" style="width:208px !important; align:center;"> </div>

<script async>
(function(){ var acc = "acc_543d584_pub";var st ="css";var or= "h";var e=document.getElementsByTagName("script")[0];var d=document.createElement("script");d.src=('https:' == document.location.protocol ?'https://' : 'http://') +"engine.influads.com/show/"+or+"/"+st+"/"+acc;d.type="text/javascript"; d.async=true; d.defer=true; e.parentNode.insertBefore(d,e);})();
</script>

<div id="hireme" class="hireme codinghorror" style="min-height:220px"></div>

<script async>
    setTimeout(function () {
        var a = document.createElement("script");
        var b = document.getElementsByTagName('script')[0];
        a.src = "http://careers.stackoverflow.com/ad/js";
        a.async = true; 
        a.type = "text/javascript"; 
        b.parentNode.insertBefore(a, b);
    }, 5);
</script>

<div style="margin-bottom:10px">
<a href="http://www.atlassian.com/software/bamboo/overview/jira-integration?utm_source=coding-horror&utm_medium=banner&utm_content=bamboo+jira-en-208x250-cloudtinuous-orange-0712&utm_campaign=direct-display" rel="nofollow"><img alt="JIRA + Bamboo, Cloud-tinuous integration from $20/month" title="JIRA + Bamboo, Cloud-tinuous integration from $20/month" src="http://www.codinghorror.com/.a/6a0120a85dcdae970b017743a98e57970d-pi" width="208" height="250" /></a>
</div>


<p></p> 
<div class="sidetitle">Resources</div> 
<a href="/blog/2004/02/about-me.html">About Me</a><br/>
<a href="http://twitter.com/codinghorror">@codinghorror</a><br/>
<a href="http://stackexchange.com">stackexchange.com</a><br/>
<a href="/blog/2004/02/recommended-reading-for-developers.html">Recommended Reading</a>
<p></p>
<div class="sidetitle">Last Comments</div> 
<div class="side"> 


	<a href="http://www.codinghorror.com/blog/2012/09/computer-crime-then-and-now.html#endcomments">Computer Crime, Then and Now</a> (<a href="http://www.codinghorror.com/blog/2012/09/computer-crime-then-and-now.html#comments">25</a>)<br />

	<a href="http://www.codinghorror.com/blog/2012/08/i-was-a-teenage-hacker.html#endcomments">I Was a Teenage Hacker</a> (<a href="http://www.codinghorror.com/blog/2012/08/i-was-a-teenage-hacker.html#comments">75</a>)<br />

	<a href="http://www.codinghorror.com/blog/2012/08/today-is-goof-off-at-work-day.html#endcomments">Today is Goof Off at Work Day</a> (<a href="http://www.codinghorror.com/blog/2012/08/today-is-goof-off-at-work-day.html#comments">39</a>)<br />

	<a href="http://www.codinghorror.com/blog/2012/07/the-ips-lcd-revolution.html#endcomments">The IPS LCD Revolution</a> (<a href="http://www.codinghorror.com/blog/2012/07/the-ips-lcd-revolution.html#comments">72</a>)<br />

	<a href="http://www.codinghorror.com/blog/2012/07/but-you-did-not-persuade-me.html#endcomments">But You Did Not Persuade Me</a> (<a href="http://www.codinghorror.com/blog/2012/07/but-you-did-not-persuade-me.html#comments">17</a>)<br />

	<a href="http://www.codinghorror.com/blog/2012/07/new-programming-jargon.html#endcomments">New Programming Jargon</a> (<a href="http://www.codinghorror.com/blog/2012/07/new-programming-jargon.html#comments">133</a>)<br />

	<a href="http://www.codinghorror.com/blog/2012/07/coding-horror-the-book.html#endcomments">Coding Horror: The Book</a> (<a href="http://www.codinghorror.com/blog/2012/07/coding-horror-the-book.html#comments">60</a>)<br />


</div>

<div class="syndicate"> 
<a href="http://feeds.feedburner.com/codinghorror" rel="alternate" type="application/rss+xml"><img src="http://www.feedburner.com/fb/images/pub/feed-icon16x16.png" width=16 height=16 alt="" style="vertical-align:middle;border:0"/>&nbsp;Subscribe in a reader</a> 
<br/> 
<a href="http://feedburner.google.com/fb/a/mailverify?uri=codinghorror&amp;loc=en_US"><img src="/blog/images/mail.png" width=16 height=16 alt="" style="vertical-align:middle;border:0"/>&nbsp;Subscribe via email</a> 
<p></p>
<div class="side"> 
Coding Horror has been continuously published since 2004. Browse the <b><a href="http://www.codinghorror.com/blog/archives.html">complete post archives</a></b>.
</div> 
<p></p> 
<table style="border-spacing:0px">
<tr>
<td style="padding-right:10px">
<img src="http://feeds.feedburner.com/~fc/codinghorror?bg=EEEEEE&amp;fg=111111&amp;anim=0" height="26" width="88" style="border:0" alt="Count of RSS readers" /> 
</td>
<td style="padding-bottom:8px">
<a href="http://my.statcounter.com/project/standard/stats.php?project_id=2600027&amp;guest=1">Traffic Stats</a> 
</td>
</tr>
</table>
</div> 

</div> <!-- links -->

<script>
var sc_project=2600027; 
var sc_invisible=0; 
var sc_partition=25; 
var sc_security="dcff5548"; 
</script> 
 
<script async src="http://www.statcounter.com/counter/counter.js"></script> 
<noscript><a href="http://www.statcounter.com/"><img  src="http://c26.statcounter.com/counter.php?sc_project=2600027&amp;java=0&amp;security=dcff5548&amp;invisible=0" alt="web metrics"></a> </noscript> 


 

<!-- Blogside Toolbar -->
<script type="text/javascript">
    var TPToolbar = {
        src:   "http://www.typepad.com/services/toolbar?blog_id=6a0120a85dcdae970b0128776faab5970c&asset_id=&atype=index&to=http%3A%2F%2Fcodinghorror.com%2Fblog%2F&autofollowed=0",
        asset_xid: "",
    
        bookmarklet_uri: "http://static.typepad.com/.shared/js/qp/loader-combined-min.js"
    };
    var TYPEPAD___bookmarklet_domain = "http://www.typepad.com/";
</script>
<script type="text/javascript" src="/.shared/js/toolbar/blogside-toolbar-combined-min.js"></script>
<!-- End Blogside Toolbar -->
<!-- Begin comScore Tag -->
<script>
document.write(unescape("%3Cscript src='" + (document.location.protocol == "https:" ? "https://sb" : "http://b") + ".scorecardresearch.com/beacon.js'%3E%3C/script%3E"));
</script>
<script>
COMSCORE.beacon({
  c1: 2,
  c2: "6035669",
  c3: "",
  c4: "http://codinghorror.com/blog/",
  c5: "",
  c6: "",
  c15: ""
});
</script>
<noscript>
  <img src="http://b.scorecardresearch.com/b?c1=2&c2=6035669&c3=&c4=http%3A%2F%2Fcodinghorror.com%2Fblog%2F&c5=&c6=&c15=&cv=1.3&cj=1" style="display:none" width="0" height="0" alt="" />
</noscript>
<!-- End comScore Tag -->
<!-- ph=1 -->